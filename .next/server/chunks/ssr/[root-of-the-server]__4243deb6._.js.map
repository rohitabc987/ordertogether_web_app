{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/inter_9e72d27f.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"inter_9e72d27f-module__JKMi0a__className\",\n  \"variable\": \"inter_9e72d27f-module__JKMi0a__variable\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 16, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/inter_9e72d27f.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Inter%22,%22arguments%22:[{%22subsets%22:[%22latin%22],%22variable%22:%22--font-inter%22}],%22variableName%22:%22inter%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Inter', 'Inter Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,qJAAA,CAAA,UAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,qJAAA,CAAA,UAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,qJAAA,CAAA,UAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/montserrat_9e31ce77.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"montserrat_9e31ce77-module__ilI6Oa__className\",\n  \"variable\": \"montserrat_9e31ce77-module__ilI6Oa__variable\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 47, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/montserrat_9e31ce77.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Montserrat%22,%22arguments%22:[{%22subsets%22:[%22latin%22],%22variable%22:%22--font-montserrat%22,%22weight%22:[%22400%22,%22700%22]}],%22variableName%22:%22montserrat%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Montserrat', 'Montserrat Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,0JAAA,CAAA,UAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,0JAAA,CAAA,UAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,0JAAA,CAAA,UAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 69, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/utils.ts"],"sourcesContent":["\nimport { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\nimport { differenceInHours } from 'date-fns';\nimport type { Post } from \"./types\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n\nexport function formatCurrency(amount: number) {\n  return new Intl.NumberFormat('en-IN', {\n    style: 'currency',\n    currency: 'INR',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0,\n    currencyDisplay: 'symbol'\n  }).format(amount);\n}\n\nexport function generateCatchyTitle(post: Partial<Post>): string {\n  // If core fields are missing, fallback to the user's title or a generic one.\n  if (!post.details?.restaurant || !post.order?.totalAmount) {\n    return post.details?.title?.trim() || \"Group Order\";\n  }\n\n  const remaining = Math.max(0, (post.order.totalAmount || 0) - (post.order.contributionAmount || 0));\n  const deadlineHours = post.timestamps?.deadline ? differenceInHours(new Date(post.timestamps.deadline), new Date()) : null;\n\n  // --- Phrase Pools for Variation ---\n  const invitePhrases = [\n    `Join our ${post.details.restaurant} order`,\n    `Group order for ${post.details.restaurant}`,\n    `Who's in for ${post.details.restaurant}?`,\n    `Let's order on ${post.details.restaurant} together`,\n  ];\n\n  const dealPhrases: string[] = [];\n  // Prioritize user-mentioned deals\n  if (post.details.title && /free delivery/i.test(post.details.title)) {\n    dealPhrases.push(\"Free Delivery 🚚\");\n  } else if (post.details.title && /₹\\d+\\s*off/i.test(post.details.title)) {\n    // Extract and use the specific discount mentioned\n    const match = post.details.title.match(/₹\\d+\\s*off/i);\n    if(match) dealPhrases.push(`${match[0].trim()} 🔥`);\n  }\n  \n  if (remaining > 0) {\n    dealPhrases.push(`${formatCurrency(remaining)} more needed!`);\n  } else {\n    // Only add this if no other deal is mentioned to avoid clutter\n    if (dealPhrases.length === 0) {\n      dealPhrases.push(\"Deal reached!\");\n    }\n  }\n\n  const urgencyPhrases: string[] = [];\n  if (deadlineHours !== null && deadlineHours > 0 && deadlineHours <= 6) {\n    urgencyPhrases.push(`Ends in ${deadlineHours}h ⏳`);\n  } else if (deadlineHours !== null && deadlineHours <= 0) {\n    urgencyPhrases.push('Closing now!');\n  }\n\n  const emojis = [\"🎉\", \"🔥\", \"🍕\", \"🚀\"];\n  \n  // --- Assemble the Title ---\n\n  // 1. Start with a random invitation phrase\n  const invite = invitePhrases[Math.floor(Math.random() * invitePhrases.length)];\n  \n  // 2. Add the most relevant deal phrase if available\n  const deal = dealPhrases.length > 0 ? dealPhrases[0] : \"\";\n  \n  // 3. Add an urgency phrase if relevant\n  const urgency = urgencyPhrases.length > 0 ? urgencyPhrases[0] : \"\";\n\n  // 4. Occasionally add a random emoji for flavor, but not if one is already in a phrase\n  let randomEmoji = '';\n  if (Math.random() > 0.5 && !deal.includes('🚚') && !deal.includes('🔥') && !urgency.includes('⏳')) {\n    randomEmoji = emojis[Math.floor(Math.random() * emojis.length)];\n  }\n\n  // Combine the parts, filtering out any empty strings\n  const segments = [invite, deal, urgency, randomEmoji].filter(s => s && s.trim() !== '');\n  let title = segments.join(\" • \");\n\n  // Trim the title if it's too long\n  const maxLength = 100;\n  if (title.length > maxLength) {\n    title = title.substring(0, maxLength - 3) + \"...\";\n  }\n\n  return title;\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 168, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/toaster.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Toaster = registerClientReference(\n    function() { throw new Error(\"Attempted to call Toaster() from the server but Toaster is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/toaster.tsx <module evaluation>\",\n    \"Toaster\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,UAAU,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACzC;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,+DACA","debugId":null}},
    {"offset": {"line": 182, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/toaster.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Toaster = registerClientReference(\n    function() { throw new Error(\"Attempted to call Toaster() from the server but Toaster is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/toaster.tsx\",\n    \"Toaster\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,UAAU,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACzC;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,2CACA","debugId":null}},
    {"offset": {"line": 196, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 222, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/firebase-admin.ts"],"sourcesContent":["import admin from 'firebase-admin';\nimport getConfig from 'next/config';\n\n// Important: You must generate a service account key in the Firebase console,\n// Base64-encode the entire JSON file, and set it as a single environment variable.\n// DO NOT hardcode the service account key in your code.\n// For local development, you can create a `.env` file with the variable.\n\nfunction initializeAdminApp() {\n  if (admin.apps.length > 0) {\n    return admin.app();\n  }\n\n  const { serverRuntimeConfig } = getConfig();\n  const base64ServiceAccount = serverRuntimeConfig.FIREBASE_SERVICE_ACCOUNT_BASE64;\n\n  if (!base64ServiceAccount) {\n    throw new Error('FIREBASE_SERVICE_ACCOUNT_BASE64 is not set in next.config.js. Please check your configuration.');\n  }\n\n  try {\n    // Decode the Base64 string to get the JSON string\n    const serviceAccountJson = Buffer.from(base64ServiceAccount, 'base64').toString('utf8');\n    const serviceAccount = JSON.parse(serviceAccountJson);\n\n    return admin.initializeApp({\n      credential: admin.credential.cert(serviceAccount)\n    });\n  } catch (error: any) {\n    console.error('Firebase admin initialization error', error);\n    // Throw a more descriptive error to help with debugging.\n    throw new Error(`Firebase admin initialization failed: ${error.message}. Ensure FIREBASE_SERVICE_ACCOUNT_BASE64 is a valid Base64-encoded service account JSON.`);\n  }\n}\n\nconst adminApp = initializeAdminApp();\nexport const db = adminApp.firestore();\nexport const auth = adminApp.auth();\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEA,8EAA8E;AAC9E,mFAAmF;AACnF,wDAAwD;AACxD,yEAAyE;AAEzE,SAAS;IACP,IAAI,2HAAA,CAAA,UAAK,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG;QACzB,OAAO,2HAAA,CAAA,UAAK,CAAC,GAAG;IAClB;IAEA,MAAM,EAAE,mBAAmB,EAAE,GAAG,CAAA,GAAA,8HAAA,CAAA,UAAS,AAAD;IACxC,MAAM,uBAAuB,oBAAoB,+BAA+B;IAEhF,IAAI,CAAC,sBAAsB;QACzB,MAAM,IAAI,MAAM;IAClB;IAEA,IAAI;QACF,kDAAkD;QAClD,MAAM,qBAAqB,OAAO,IAAI,CAAC,sBAAsB,UAAU,QAAQ,CAAC;QAChF,MAAM,iBAAiB,KAAK,KAAK,CAAC;QAElC,OAAO,2HAAA,CAAA,UAAK,CAAC,aAAa,CAAC;YACzB,YAAY,2HAAA,CAAA,UAAK,CAAC,UAAU,CAAC,IAAI,CAAC;QACpC;IACF,EAAE,OAAO,OAAY;QACnB,QAAQ,KAAK,CAAC,uCAAuC;QACrD,yDAAyD;QACzD,MAAM,IAAI,MAAM,CAAC,sCAAsC,EAAE,MAAM,OAAO,CAAC,wFAAwF,CAAC;IAClK;AACF;AAEA,MAAM,WAAW;AACV,MAAM,KAAK,SAAS,SAAS;AAC7B,MAAM,OAAO,SAAS,IAAI","debugId":null}},
    {"offset": {"line": 275, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/data.ts"],"sourcesContent":["\n// @ts-nocheck\nimport type { User, Post } from './types';\nimport { db } from './firebase-admin';\nimport { cache } from 'react';\nimport { Timestamp, FieldPath, type Query } from 'firebase-admin/firestore';\n\nconst usersCollection = db.collection('users');\nconst postsCollection = db.collection('posts');\nconst appDataCollection = db.collection('app_data');\n\n// Helper function to convert Firestore Timestamps to JS Dates\nfunction convertTimestamps(obj: any): any {\n  if (!obj) return obj;\n  if (Array.isArray(obj)) {\n    return obj.map(convertTimestamps);\n  }\n  if (obj instanceof Timestamp) {\n    // When serializing for the client, toISOString() is a good, standard format.\n    return obj.toDate().toISOString();\n  }\n  if (typeof obj === 'object') {\n    const newObj: { [key: string]: any } = {};\n    for (const key in obj) {\n      newObj[key] = convertTimestamps(obj[key]);\n    }\n    return newObj;\n  }\n  return obj;\n}\n\nexport const getAuthorAndInstitution = cache(async (authorId: string): Promise<{ authorData: User; institutionId: string; } | null> => {\n  try {\n    const userDoc = await usersCollection.doc(authorId).get();\n    if (!userDoc.exists) return null;\n\n    const authorData = { id: userDoc.id, ...userDoc.data() } as User;\n    const institutionId = authorData.institution?.institutionName;\n\n    if (!institutionId) {\n      console.warn(`User ${authorId} does not have an institutionId.`);\n      return null;\n    }\n    return { authorData: convertTimestamps(authorData), institutionId };\n  } catch (error) {\n    console.error('Error fetching user and institution:', error);\n    return null;\n  }\n});\n\n\nexport const findUserByEmail = cache(async (email: string): Promise<User | undefined> => {\n  console.log(`data: findUserByEmail called for: ${email}`);\n  const snapshot = await usersCollection.where('contact.email', '==', email).limit(1).get();\n  if (snapshot.empty) {\n    console.log(`data: No user found with email: ${email}`);\n    return undefined;\n  }\n  const userDoc = snapshot.docs[0];\n  const userData = { id: userDoc.id, ...userDoc.data() } as User;\n  console.log(`data: User found with ID: ${userDoc.id}`, userData);\n  return convertTimestamps(userData);\n});\n\nexport const getUserById = cache(async (userId: string): Promise<User | undefined> => {\n  console.log(`data: getUserById called for ID: ${userId}`);\n  const userDoc = await usersCollection.doc(userId).get();\n  if (!userDoc.exists) {\n    console.log(`data: No user found with ID: ${userId}`);\n    return undefined;\n  }\n  const userData = { id: userDoc.id, ...userDoc.data() } as User;\n  // Convert timestamps for client-side usage\n  return convertTimestamps(userData);\n});\n\nasync function joinAuthorToPosts(posts: any[]): Promise<Post[]> {\n  if (posts.length === 0) return [];\n\n  const authorIds = [...new Set(posts.map(p => p.authorId).filter(Boolean))];\n  \n  const authors = {};\n  if (authorIds.length > 0) {\n    const authorPromises = authorIds.map(id => getUserById(id));\n    const authorResults = await Promise.all(authorPromises);\n    authorResults.forEach(author => {\n      if (author) {\n        authors[author.id] = author;\n      }\n    });\n  }\n\n  const joinedPosts = posts.map(post => ({\n    ...post,\n    author: authors[post.authorId] || null,\n  })).filter(p => p.author !== null);\n\n  // This is the critical fix: convert timestamps AFTER joining the author.\n  return convertTimestamps(joinedPosts);\n}\n\nexport const getPostsForUser = cache(async (user: User | null): Promise<Post[]> => {\n  let query: Query = postsCollection;\n\n  if (user?.institution?.institutionName) {\n    query = query.where('location.institutionName', '==', user.institution.institutionName);\n  } else {\n    // Only apply ordering when not filtering by institution to avoid composite index need\n    query = query.orderBy('timestamps.createdAt', 'desc');\n  }\n\n  query = query.limit(25);\n\n  const snapshot = await query.get();\n  \n  let posts = snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\n\n  // Manually sort if we didn't do it in the query\n  if (user?.institution?.institutionName) {\n    posts.sort((a, b) => b.timestamps.createdAt.toMillis() - a.timestamps.createdAt.toMillis());\n  }\n\n  // Exclude posts made by the current user from their own feed\n  if (user) {\n    posts = posts.filter(post => post.authorId !== user.id);\n  }\n\n  const postsWithAuthors = await joinAuthorToPosts(posts);\n  \n  return postsWithAuthors;\n});\n\n\nexport const getPostsByAuthorId = cache(async (authorId: string): Promise<Post[]> => {\n  const snapshot = await postsCollection.where('authorId', '==', authorId).get();\n  let posts = snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\n\n  // Manual sort to avoid composite index\n  posts.sort((a, b) => b.timestamps.createdAt.toMillis() - a.timestamps.createdAt.toMillis());\n  \n  const postsWithAuthors = await joinAuthorToPosts(posts);\n  \n  return postsWithAuthors;\n});\n\nexport async function updatePost(postId: string, updates: Partial<Post>): Promise<void> {\n  await postsCollection.doc(postId).update({\n    ...updates,\n    'timestamps.updatedAt': new Date(),\n  });\n}\n\nexport async function deletePost(postId: string): Promise<void> {\n  await postsCollection.doc(postId).delete();\n}\n\nexport const getPostById = cache(async (postId: string): Promise<Post | null> => {\n  const postDoc = await postsCollection.doc(postId).get();\n  if (!postDoc.exists) {\n    return null;\n  }\n  const postData = { id: postDoc.id, ...postDoc.data() };\n  const postsWithAuthor = await joinAuthorToPosts([postData]);\n  return postsWithAuthor[0] || null; // Return null if author join fails\n});\n\nexport async function updateUser(userId: string, updates: Record<string, any>): Promise<User> {\n  await usersCollection.doc(userId).update(updates);\n  const updatedUser = await getUserById(userId);\n  if (!updatedUser) {\n    throw new Error('User not found after update');\n  }\n  return updatedUser;\n}\n\nexport async function createUserInDb(data: { name: string; email: string; photoURL?: string | null; }): Promise<User> {\n  console.log(`data: createUserInDb called for email: ${data.email}`);\n  const newUserTemplate: Omit<User, 'id'> = {\n    userProfile: {\n      name: data.name,\n      gender: 'prefer_not_to_say',\n      photoURL: data.photoURL || null,\n    },\n    contact: {\n      email: data.email,\n      phone: null,\n      shareContact: true,\n    },\n    location: {\n      area: null,\n      city: null,\n      pinCode: null,\n    },\n    institution: {\n      institutionType: null,\n      institutionName: null,\n    },\n    subscription: {\n      status: 'inactive',\n      plan: null,\n      startDate: null,\n      expiry: null,\n      postsViewed: 0,\n    },\n  };\n\n  console.log('data: Writing new user data to Firestore:', newUserTemplate);\n  const docRef = await usersCollection.add(newUserTemplate);\n  console.log(`data: New user document created with ID: ${docRef.id}`);\n  const newUserDoc = await docRef.get();\n\n  const result = { id: docRef.id, ...newUserDoc.data() } as User;\n  console.log('data: Returning new user object:', result);\n  return convertTimestamps(result);\n}\n\nexport const getBannerImageUrl = cache(async (): Promise<string | null> => {\n  try {\n    const snapshot = await appDataCollection.limit(1).get();\n    if (snapshot.empty) {\n      console.log('data: No document found in app_data collection.');\n      return null;\n    }\n    const doc = snapshot.docs[0];\n    const data = doc.data();\n    return data.banner_img || null;\n  } catch (error) {\n    console.error('Error fetching banner image URL:', error);\n    return null;\n  }\n});\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 524, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/header.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Header = registerClientReference(\n    function() { throw new Error(\"Attempted to call Header() from the server but Header is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/header.tsx <module evaluation>\",\n    \"Header\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,SAAS,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,2DACA","debugId":null}},
    {"offset": {"line": 538, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/header.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Header = registerClientReference(\n    function() { throw new Error(\"Attempted to call Header() from the server but Header is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/header.tsx\",\n    \"Header\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,SAAS,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,uCACA","debugId":null}},
    {"offset": {"line": 552, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 562, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/layout.tsx"],"sourcesContent":["\n\nimport { Inter, Montserrat } from 'next/font/google';\nimport './globals.css';\nimport { cn } from '@/lib/utils';\nimport { Toaster } from '@/components/ui/toaster';\nimport { AppStateProvider } from '@/components/providers/state-provider';\nimport { User } from '@/lib/types';\nimport { cookies } from 'next/headers';\nimport { findUserById } from '@/lib/data';\nimport Header from '@/components/header';\n\nconst inter = Inter({ subsets: ['latin'], variable: '--font-inter' });\nconst montserrat = Montserrat({\n  subsets: ['latin'],\n  variable: '--font-montserrat',\n  weight: ['400', '700'],\n});\n\nexport const metadata = {\n  title: 'Echo - Share and Save on Group Orders',\n  description: 'Echo is a platform to connect with people in your building to share orders and save money.',\n};\n\nasync function getUser(): Promise<User | null> {\n    const cookieStore = cookies();\n    const userId = cookieStore.get('session_userId')?.value;\n    \n    if (userId) {\n        try {\n            const user = await findUserById(userId);\n            return user;\n        } catch (error) {\n            console.error(\"Failed to fetch user:\", error);\n            return null;\n        }\n    }\n    return null;\n}\n\nexport default async function RootLayout({ children }: { children: React.ReactNode }) {\n  const user = await getUser();\n\n  return (\n    <html lang=\"en\" suppressHydrationWarning>\n      <body className={cn(\n        'min-h-screen bg-background font-sans antialiased',\n        inter.variable,\n        montserrat.variable\n      )}>\n        <AppStateProvider user={user}>\n          <div className=\"relative flex min-h-dvh flex-col bg-background\">\n              <Header />\n              <main className=\"flex-1 py-8\">{children}</main>\n          </div>\n          <Toaster />\n        </AppStateProvider>\n      </body>\n    </html>\n  );\n}\n"],"names":[],"mappings":";;;;;;;AAIA;AACA;;;;;;AAGA;AACA;AACA;;;;;;;;;;;;;;;AASO,MAAM,WAAW;IACtB,OAAO;IACP,aAAa;AACf;AAEA,eAAe;IACX,MAAM,cAAc,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD;IAC1B,MAAM,SAAS,YAAY,GAAG,CAAC,mBAAmB;IAElD,IAAI,QAAQ;QACR,IAAI;YACA,MAAM,OAAO,MAAM,CAAA,GAAA,kHAAA,CAAA,eAAY,AAAD,EAAE;YAChC,OAAO;QACX,EAAE,OAAO,OAAO;YACZ,QAAQ,KAAK,CAAC,yBAAyB;YACvC,OAAO;QACX;IACJ;IACA,OAAO;AACX;AAEe,eAAe,WAAW,EAAE,QAAQ,EAAiC;IAClF,MAAM,OAAO,MAAM;IAEnB,qBACE,8OAAC;QAAK,MAAK;QAAK,wBAAwB;kBACtC,cAAA,8OAAC;YAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAChB,oDACA,yIAAA,CAAA,UAAK,CAAC,QAAQ,EACd,8IAAA,CAAA,UAAU,CAAC,QAAQ;sBAEnB,cAAA,8OAAC;gBAAiB,MAAM;;kCACtB,8OAAC;wBAAI,WAAU;;0CACX,8OAAC,4HAAA,CAAA,UAAM;;;;;0CACP,8OAAC;gCAAK,WAAU;0CAAe;;;;;;;;;;;;kCAEnC,8OAAC,mIAAA,CAAA,UAAO;;;;;;;;;;;;;;;;;;;;;AAKlB","debugId":null}}]
}