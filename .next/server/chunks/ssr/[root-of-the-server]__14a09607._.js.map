{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 223, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.5-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 244, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/restaurant-filtering.ts"],"sourcesContent":["'use server';\n\n/**\n * @fileOverview Restaurant filtering AI agent.\n *\n * - filterRestaurants - A function that suggests restaurants based on user location, order history, and trends.\n * - FilterRestaurantsInput - The input type for the filterRestaurants function.\n * - FilterRestaurantsOutput - The return type for the filterRestaurants function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst FilterRestaurantsInputSchema = z.object({\n  location: z.string().describe('The user\\u2019s current location.'),\n  pastOrders: z.string().describe('A list of the user\\u2019s past orders.'),\n  currentTrends: z.string().describe('Current popular restaurants in the area.'),\n});\nexport type FilterRestaurantsInput = z.infer<typeof FilterRestaurantsInputSchema>;\n\nconst FilterRestaurantsOutputSchema = z.object({\n  suggestedRestaurants: z\n    .array(z.string())\n    .describe('A list of suggested restaurants based on the input data.'),\n});\nexport type FilterRestaurantsOutput = z.infer<typeof FilterRestaurantsOutputSchema>;\n\nexport async function filterRestaurants(input: FilterRestaurantsInput): Promise<FilterRestaurantsOutput> {\n  return filterRestaurantsFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'filterRestaurantsPrompt',\n  input: {schema: FilterRestaurantsInputSchema},\n  output: {schema: FilterRestaurantsOutputSchema},\n  prompt: `You are a restaurant recommendation expert. Based on the user's location, past orders, and current trends, suggest a list of restaurants.\n\nLocation: {{{location}}}\nPast Orders: {{{pastOrders}}}\nCurrent Trends: {{{currentTrends}}}\n\nSuggest a list of restaurants:`,\n});\n\nconst filterRestaurantsFlow = ai.defineFlow(\n  {\n    name: 'filterRestaurantsFlow',\n    inputSchema: FilterRestaurantsInputSchema,\n    outputSchema: FilterRestaurantsOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;AAEA;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,+BAA+B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC5C,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC9B,YAAY,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAChC,eAAe,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AACrC;AAGA,MAAM,gCAAgC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC7C,sBAAsB,uIAAA,CAAA,IAAC,CACpB,KAAK,CAAC,uIAAA,CAAA,IAAC,CAAC,MAAM,IACd,QAAQ,CAAC;AACd;AAGO,eAAe,kBAAkB,KAA6B;IACnE,OAAO,sBAAsB;AAC/B;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAC,QAAQ;IAA4B;IAC5C,QAAQ;QAAC,QAAQ;IAA6B;IAC9C,QAAQ,CAAC;;;;;;8BAMmB,CAAC;AAC/B;AAEA,MAAM,wBAAwB,mHAAA,CAAA,KAAE,CAAC,UAAU,CACzC;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,OAAO;IAC9B,OAAO;AACT;;;IA1BoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 309, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/actions.ts"],"sourcesContent":["// @ts-nocheck\n'use server';\n\nimport { z } from 'zod';\nimport { cookies } from 'next/headers';\nimport { redirect } from 'next/navigation';\nimport { revalidatePath } from 'next/cache';\n\nimport { createPost, findUserByEmail, updateUser, createUserInDb } from '@/lib/data';\nimport { filterRestaurants } from '@/ai/flows/restaurant-filtering';\n\nconst loginSchema = z.object({\n  email: z.string().email(),\n  password: z.string().min(6),\n});\n\nexport async function loginAction(prevState: any, formData: FormData) {\n  const parsed = loginSchema.safeParse(Object.fromEntries(formData));\n\n  if (!parsed.success) {\n    return { message: 'Invalid email or password format.' };\n  }\n\n  const { email, password } = parsed.data;\n  const user = await findUserByEmail(email);\n\n  if (!user || user.password !== password) {\n    return { message: 'Invalid email or password.' };\n  }\n\n  cookies().set('session_userId', user.id, {\n    httpOnly: true,\n    secure: process.env.NODE_ENV === 'production',\n    maxAge: 60 * 60 * 24, // 24 hours\n    path: '/',\n  });\n\n  redirect('/');\n}\n\nconst signupSchema = z.object({\n  email: z.string().email(),\n  password: z.string().min(6),\n  name: z.string().min(2),\n});\n\nexport async function signupAction(prevState: any, formData: FormData) {\n  const parsed = signupSchema.safeParse(Object.fromEntries(formData));\n\n  if (!parsed.success) {\n    return { message: 'Invalid form data.' };\n  }\n  \n  const existingUser = await findUserByEmail(parsed.data.email);\n  if (existingUser) {\n    return { message: 'User with this email already exists.' };\n  }\n\n  const newUser = await createUserInDb(parsed.data);\n\n  cookies().set('session_userId', newUser.id, {\n    httpOnly: true,\n    secure: process.env.NODE_ENV === 'production',\n    maxAge: 60 * 60 * 24, // 24 hours\n    path: '/',\n  });\n  \n  redirect('/');\n}\n\n\nexport async function logoutAction() {\n  cookies().delete('session_userId');\n  redirect('/login');\n}\n\nconst postSchema = z.object({\n  restaurant: z.string().min(1, 'Restaurant is required.'),\n  minAmount: z.coerce.number().min(0),\n  maxAmount: z.coerce.number().min(0),\n  deadline: z.coerce.date(),\n  notes: z.string().optional(),\n  authorId: z.string(),\n  authorName: z.string(),\n  contact: z.object({\n    phone: z.string(),\n    whatsapp: z.string(),\n  }),\n  location: z.object({\n    hostel: z.string(),\n    society: z.string(),\n  }),\n});\n\nexport async function createPostAction(prevState: any, formData: FormData) {\n  const rawData = {\n    ...Object.fromEntries(formData),\n    contact: JSON.parse(formData.get('contact') as string),\n    location: JSON.parse(formData.get('location') as string),\n  };\n  \n  const parsed = postSchema.safeParse(rawData);\n\n  if (!parsed.success) {\n    console.error(parsed.error.flatten().fieldErrors);\n    return { message: 'Invalid post data. Please check your inputs.' };\n  }\n  \n  if (parsed.data.minAmount > parsed.data.maxAmount) {\n    return { message: 'Minimum amount cannot be greater than maximum amount.' };\n  }\n\n  await createPost(parsed.data);\n  revalidatePath('/');\n  redirect('/');\n}\n\nconst profileSchema = z.object({\n  id: z.string(),\n  name: z.string().min(2, 'Name must be at least 2 characters.'),\n  phone: z.string().min(10, 'Please enter a valid phone number.'),\n  whatsapp: z.string().min(10, 'Please enter a valid WhatsApp number.'),\n  hostel: z.string().min(1, 'Hostel/PG name is required.'),\n  society: z.string().min(1, 'Society/Area name is required.'),\n});\n\nexport async function updateProfileAction(prevState: any, formData: FormData) {\n  const parsed = profileSchema.safeParse(Object.fromEntries(formData));\n\n  if (!parsed.success) {\n    return { message: 'Invalid profile data.' };\n  }\n\n  await updateUser(parsed.data.id, {\n    name: parsed.data.name,\n    contact: { phone: parsed.data.phone, whatsapp: parsed.data.whatsapp },\n    location: { hostel: parsed.data.hostel, society: parsed.data.society },\n  });\n\n  revalidatePath('/profile');\n  revalidatePath('/');\n  return { message: 'Profile updated successfully!' };\n}\n\nexport async function subscribeAction(plan: 'daily' | 'weekly' | 'monthly', userId: string) {\n  let expiryDays = 0;\n  if (plan === 'daily') expiryDays = 1;\n  if (plan === 'weekly') expiryDays = 7;\n  if (plan === 'monthly') expiryDays = 30;\n\n  const expiryDate = new Date();\n  expiryDate.setDate(expiryDate.getDate() + expiryDays);\n\n  await updateUser(userId, {\n    subscription: {\n      status: 'active',\n      plan: plan,\n      expiry: expiryDate.toISOString(),\n    },\n  });\n\n  revalidatePath('/pricing');\n  revalidatePath('/');\n  revalidatePath('/profile');\n}\n\nexport async function getRestaurantSuggestions(location: string) {\n  try {\n    const result = await filterRestaurants({\n      location,\n      pastOrders: \"Pizza, Burgers\", // Mock data\n      currentTrends: \"Italian, Fast Food\", // Mock data\n    });\n    return result.suggestedRestaurants;\n  } catch (error) {\n    console.error(\"AI suggestion failed:\", error);\n    return [];\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 519, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/pricing/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {getUserId as '0059518ee421a3ff54122d9a29b9249dfdd56384ef'} from 'ACTIONS_MODULE0'\nexport {getCurrentUser as '00c7cf5be85046cc79dbca603be7a72197af0f20e9'} from 'ACTIONS_MODULE0'\nexport {logoutAction as '004d49033eb565a117b1d8b30854d8c4f35e240335'} from 'ACTIONS_MODULE1'\nexport {subscribeAction as '608a37014da282c02d5887e206935bc210b6f2413e'} from 'ACTIONS_MODULE1'\n"],"names":[],"mappings":";AAAA;AAEA","debugId":null}},
    {"offset": {"line": 583, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/pricing-card.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const PricingCard = registerClientReference(\n    function() { throw new Error(\"Attempted to call PricingCard() from the server but PricingCard is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/pricing-card.tsx <module evaluation>\",\n    \"PricingCard\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,iEACA","debugId":null}},
    {"offset": {"line": 597, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/pricing-card.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const PricingCard = registerClientReference(\n    function() { throw new Error(\"Attempted to call PricingCard() from the server but PricingCard is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/pricing-card.tsx\",\n    \"PricingCard\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,6CACA","debugId":null}},
    {"offset": {"line": 611, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 621, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/pricing/page.tsx"],"sourcesContent":["import { PricingCard } from '@/components/pricing-card';\nimport { getCurrentUser } from '@/lib/session';\nimport { redirect } from 'next/navigation';\n\nconst plans = [\n  {\n    id: 'daily' as const,\n    name: 'Daily Pass',\n    price: '₹10',\n    description: 'Perfect for a one-time need.',\n    features: ['View contacts for 24 hours', 'Unlimited contact views'],\n  },\n  {\n    id: 'weekly' as const,\n    name: 'Weekly Pass',\n    price: '₹50',\n    description: 'Best for regular users.',\n    features: ['View contacts for 7 days', 'Unlimited contact views', 'Priority support'],\n  },\n  {\n    id: 'monthly' as const,\n    name: 'Monthly Pass',\n    price: '₹150',\n    description: 'Save big with our best value plan.',\n    features: ['View contacts for 30 days', 'Unlimited contact views', 'Priority support', 'Early access to new features'],\n  },\n];\n\nexport default async function PricingPage() {\n  const user = await getCurrentUser();\n  \n  if(!user){\n    redirect('/login');\n  }\n\n  const currentPlanId = user?.subscription?.plan;\n\n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      <div className=\"text-center mb-12\">\n        <h1 className=\"text-4xl font-bold font-headline\">Choose Your Plan</h1>\n        <p className=\"text-lg text-muted-foreground mt-2\">Unlock contact details and connect with others.</p>\n      </div>\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8 max-w-4xl mx-auto\">\n        {plans.map(plan => (\n          <PricingCard key={plan.id} plan={plan} isCurrentPlan={currentPlanId === plan.id} />\n        ))}\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AAAA;;;;;AAEA,MAAM,QAAQ;IACZ;QACE,IAAI;QACJ,MAAM;QACN,OAAO;QACP,aAAa;QACb,UAAU;YAAC;YAA8B;SAA0B;IACrE;IACA;QACE,IAAI;QACJ,MAAM;QACN,OAAO;QACP,aAAa;QACb,UAAU;YAAC;YAA4B;YAA2B;SAAmB;IACvF;IACA;QACE,IAAI;QACJ,MAAM;QACN,OAAO;QACP,aAAa;QACb,UAAU;YAAC;YAA6B;YAA2B;YAAoB;SAA+B;IACxH;CACD;AAEc,eAAe;IAC5B,MAAM,OAAO,MAAM,CAAA,GAAA,qHAAA,CAAA,iBAAc,AAAD;IAEhC,IAAG,CAAC,MAAK;QACP,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE;IACX;IAEA,MAAM,gBAAgB,MAAM,cAAc;IAE1C,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAAmC;;;;;;kCACjD,8OAAC;wBAAE,WAAU;kCAAqC;;;;;;;;;;;;0BAEpD,8OAAC;gBAAI,WAAU;0BACZ,MAAM,GAAG,CAAC,CAAA,qBACT,8OAAC,qIAAA,CAAA,cAAW;wBAAe,MAAM;wBAAM,eAAe,kBAAkB,KAAK,EAAE;uBAA7D,KAAK,EAAE;;;;;;;;;;;;;;;;AAKnC","debugId":null}}]
}