{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/actions.ts"],"sourcesContent":["\n\n\n'use server';\n\nimport { revalidatePath } from 'next/cache';\nimport { Post, User } from './types';\nimport {FieldValue,Timestamp,} from 'firebase-admin/firestore';\nimport { db as adminDb, auth as adminAuth } from './firebase-admin';\nimport { cookies } from 'next/headers';\nimport { findUserByEmail, createUserInDb, getAuthorAndInstitution } from './data';\n\nfunction convertFirestoreTimestampToDate(timestamp: any): Date | null {\n  if (!timestamp) {\n    return null;\n  }\n  if (typeof timestamp.seconds === 'number' && typeof timestamp.nanoseconds === 'number') {\n    return new Date(timestamp.seconds * 1000 + timestamp.nanoseconds / 1000000);\n  }\n  const date = new Date(timestamp);\n  if (!isNaN(date.getTime())) {\n    return date;\n  }\n  return null;\n}\n\nexport async function createPostAction(prevState: any, formData: FormData) {\n  const authorId = formData.get('authorId') as string;\n\n  try {\n    const authorResult = await getAuthorAndInstitution(authorId);\n    if (!authorResult) {\n      return { message: 'Error: Could not find author or institution.' };\n    }\n\n    const { authorData } = authorResult;\n\n    const deadlineStr = formData.get('timestamps.deadline') as string;\n    const deadline = Timestamp.fromDate(new Date(deadlineStr));\n\n    const newPost: Omit<Post, 'id' | 'author'> = {\n      authorId,\n      authorInfo: {\n        authorName: authorData.userProfile.name,\n        gender: authorData.userProfile.gender || 'prefer_not_to_say',\n      },\n      details: {\n        title: formData.get('details.title') as string,\n        restaurant: formData.get('details.restaurant') as string,\n        notes: formData.get('details.notes') as string,\n      },\n      order: {\n        totalAmount: parseFloat(formData.get('order.totalAmount') as string),\n        contributionAmount: parseFloat(formData.get('order.contributionAmount') as string),\n      },\n      timestamps: {\n        createdAt: FieldValue.serverTimestamp() as any,\n        updatedAt: FieldValue.serverTimestamp() as any,\n        deadline: deadline as any,\n      },\n      location: {\n        institutionName: authorData.institution?.institutionName ?? undefined,\n        area: authorData.location?.area ?? undefined,\n        city: authorData.location?.city ?? undefined,\n      },\n    };\n\n    await adminDb.collection('posts').add(newPost);\n    \n    revalidatePath('/');\n    revalidatePath('/my-posts');\n\n    return { message: 'Post created successfully!' };\n\n  } catch (error) {\n    console.error('Error creating post:', error);\n    return { message: `Error creating post: ${error instanceof Error ? error.message : 'Unknown error'}` };\n  }\n}\n\nexport async function deletePostAction(postId: string) {\n    try {\n        await adminDb.collection('posts').doc(postId).delete();\n        revalidatePath('/my-posts');\n        return { success: true, message: 'Post deleted successfully.' };\n    } catch (error) {\n        console.error('Error deleting post:', error);\n        return { success: false, message: 'Failed to delete post.' };\n    }\n}\n\nexport async function updatePostAction(prevState: any, formData: FormData) {\n    const postId = formData.get('postId') as string;\n    if (!postId) {\n        return { message: 'Error: Post ID is missing.' };\n    }\n\n    try {\n        const deadlineStr = formData.get('timestamps.deadline') as string;\n        const deadline = Timestamp.fromDate(new Date(deadlineStr));\n\n        const updates = {\n            'details.title': formData.get('details.title') as string,\n            'details.restaurant': formData.get('details.restaurant') as string,\n            'details.notes': formData.get('details.notes') as string,\n            'order.totalAmount': parseFloat(formData.get('order.totalAmount') as string),\n            'order.contributionAmount': parseFloat(formData.get('order.contributionAmount') as string),\n            'timestamps.deadline': deadline,\n            'timestamps.updatedAt': FieldValue.serverTimestamp(),\n        };\n\n        await adminDb.collection('posts').doc(postId).update(updates);\n\n        revalidatePath('/');\n        revalidatePath('/my-posts');\n        revalidatePath(`/edit-post/${postId}`);\n\n        return { message: 'Post updated successfully!' };\n    } catch (error) {\n        console.error(`Error updating post ${postId}:`, error);\n        return { message: `Error updating post: ${error instanceof Error ? error.message : 'Unknown error'}` };\n    }\n}\n\n\nexport async function updateProfileAction(prevState: any, formData: FormData) {\n    const userId = formData.get('id') as string;\n    if (!userId) {\n        return { message: 'Error: User ID is missing.' };\n    }\n\n    const oneWeek = 7 * 24 * 60 * 60 * 1000;\n\n    try {\n        const userRef = adminDb.collection('users').doc(userId);\n        const userDoc = await userRef.get();\n        if (!userDoc.exists) {\n            return { message: 'Error: User not found.' };\n        }\n        \n        const userData = userDoc.data() as User;\n        const lastUpdateStr = userData.userProfile?.lastProfileUpdate;\n        \n        if (lastUpdateStr) {\n            const lastUpdate = new Date(lastUpdateStr);\n            if ((new Date().getTime() - lastUpdate.getTime()) < oneWeek) {\n                 return { message: 'Profile can only be updated once a week.' };\n            }\n        }\n        \n        const updates: Record<string, any> = {\n            'userProfile.name': formData.get('name'),\n            'userProfile.lastProfileUpdate': FieldValue.serverTimestamp(),\n            'contact.phone': formData.get('contactNumber'),\n            'contact.shareContact': formData.get('shareContact') === 'on',\n            'institution.institutionType': formData.get('institutionType'),\n            'institution.institutionName': formData.get('institutionName'),\n            'location.area': formData.get('area'),\n            'location.city': formData.get('city'),\n            'location.pinCode': formData.get('pinCode'),\n        };\n\n        await userRef.update(updates);\n        \n        revalidatePath('/profile');\n        revalidatePath('/');\n\n        return { message: 'Profile updated successfully!' };\n    } catch (error) {\n        console.error('Error updating profile:', error);\n        return { message: `Error updating profile: ${error instanceof Error ? error.message : 'Unknown error'}` };\n    }\n}\n\n\nexport async function deactivateSinglePostPassAction(userId: string) {\n  try {\n    const userRef = adminDb.collection('users').doc(userId);\n    const userDoc = await userRef.get();\n\n    if (!userDoc.exists) {\n      return { success: false, message: 'User not found.' };\n    }\n\n    const user = userDoc.data() as User;\n\n    if (user.subscription?.plan === 'single-post' && user.subscription?.status === 'active') {\n      await userRef.update({\n        'subscription.status': 'inactive',\n        'subscription.postsViewed': 1, \n      });\n\n      revalidatePath('/'); \n\n      return { success: true, message: 'Single-post pass used and deactivated.' };\n    } else {\n      return { success: false, message: 'No active single-post pass to deactivate.' };\n    }\n  } catch (error) {\n    console.error('Error deactivating single-post pass:', error);\n    return { success: false, message: 'An unexpected error occurred.' };\n  }\n}\n\n\nexport async function verifyAndSignInAction(idToken: string) {\n  try {\n    const decodedToken = await adminAuth.verifyIdToken(idToken);\n    const uid = decodedToken.uid;\n    const email = decodedToken.email;\n\n    if (!email) {\n      return { success: false, message: 'Email not found in token.' };\n    }\n\n    let user = await findUserByEmail(email);\n\n    if (!user) {\n      const newUser = {\n        name: decodedToken.name || 'New User',\n        email: email,\n        photoURL: decodedToken.picture || null,\n      };\n      user = await createUserInDb(newUser);\n    }\n    \n    const cookieStore = await cookies();\n    cookieStore.set('session_userId', user.id, { httpOnly: true, secure: process.env.NODE_ENV === 'production' });\n\n    return { success: true, user };\n  } catch (error: any) {\n    return { success: false, message: error.message || 'Authentication failed.' };\n  }\n}\n\nexport async function logoutAction() {\n    const cookieStore = await cookies();\n    cookieStore.delete('session_userId');\n}\n\n\nexport async function subscribeAction(planId: 'single-post' | 'daily' | 'weekly' | 'monthly', userId: string) {\n  if (!userId) {\n    return { success: false, message: 'User not found.' };\n  }\n\n  try {\n    const userRef = adminDb.collection('users').doc(userId);\n\n    const now = new Date();\n    let expiry = new Date(now);\n\n    switch (planId) {\n      case 'daily':\n        expiry.setDate(now.getDate() + 1);\n        break;\n      case 'weekly':\n        expiry.setDate(now.getDate() + 7);\n        break;\n      case 'monthly':\n        expiry.setMonth(now.getMonth() + 1);\n        break;\n      case 'single-post':\n        expiry.setFullYear(now.getFullYear() + 1);\n        break;\n    }\n    \n    const subscriptionData: User['subscription'] = {\n      status: 'active',\n      plan: planId,\n      startDate: Timestamp.fromDate(now) as any,\n      expiry: Timestamp.fromDate(expiry) as any,\n      postsViewed: 0,\n    };\n    \n    await userRef.update({\n        'subscription': subscriptionData\n    });\n\n    revalidatePath('/pricing');\n    revalidatePath('/profile');\n    revalidatePath('/');\n\n    return { success: true };\n  } catch (error: any) {\n    console.error('Subscription Error:', error);\n    return { success: false, message: error.message || 'An unexpected error occurred.' };\n  }\n}\n\nexport async function submitFeedbackAction(prevState: any, formData: FormData) {\n    const email = formData.get('email') as string;\n    const feedback = formData.get('feedback') as string;\n\n    if (!feedback) {\n        return { success: false, message: 'Feedback cannot be empty.' };\n    }\n\n    try {\n        await adminDb.collection('feedback').add({\n            email: email || 'anonymous',\n            feedback: feedback,\n            submittedAt: FieldValue.serverTimestamp(),\n        });\n        return { success: true, message: 'Your feedback has been submitted.' };\n    } catch (error) {\n        console.error('Feedback submission error:', error);\n        return { success: false, message: 'Something went wrong. Please try again.' };\n    }\n}\n\nexport async function updatePostViewCountAction(userId: string, count: number) {\n    if (!userId || count === 0) return;\n\n    const userRef = adminDb.collection('users').doc(userId);\n\n    try {\n        const userDoc = await userRef.get();\n        if (userDoc.exists) {\n            const currentCount = userDoc.data()?.subscription?.postsViewed || 0;\n            await userRef.update({\n                'subscription.postsViewed': currentCount + count\n            });\n        }\n    } catch (error) {\n        console.error(`Failed to update view count for user ${userId}:`, error);\n    }\n}\n"],"names":[],"mappings":";;;;;;IA2FsB,mBAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 20, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 49, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 81, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 109, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 190, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/edit-post-form.tsx"],"sourcesContent":["\n'use client';\n\nimport { useActionState, useEffect, useRef } from 'react';\nimport { useFormStatus } from 'react-dom';\nimport { useRouter } from 'next/navigation';\nimport { updatePostAction } from '@/lib/actions';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Post } from '@/lib/types';\nimport { useToast } from '@/hooks/use-toast';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from './ui/card';\nimport { format } from 'date-fns';\n\nfunction SubmitButton() {\n  const { pending } = useFormStatus();\n  return (\n    <Button type=\"submit\" disabled={pending} className=\"w-full\">\n      {pending ? 'Saving Changes...' : 'Save Changes'}\n    </Button>\n  );\n}\n\n// Helper to format date string for datetime-local input\nconst formatForDateTimeLocal = (isoString: string) => {\n    if (!isoString) return '';\n    const date = new Date(isoString);\n    // Adjust for timezone offset\n    const timezoneOffset = date.getTimezoneOffset() * 60000;\n    const localDate = new Date(date.getTime() - timezoneOffset);\n    return localDate.toISOString().slice(0, 16);\n};\n\n\nexport function EditPostForm({ post }: { post: Post }) {\n  const [state, formAction] = useActionState(updatePostAction, null);\n  const { toast } = useToast();\n  const router = useRouter();\n  const formRef = useRef<HTMLFormElement>(null);\n\n  useEffect(() => {\n    if (state?.message) {\n      const isSuccess = state.message.includes('successfully');\n      toast({\n        title: isSuccess ? 'Success!' : 'Error',\n        description: state.message,\n        variant: isSuccess ? 'default' : 'destructive',\n      });\n      if (isSuccess) {\n        // Redirect to my-posts page on success\n        router.push('/my-posts?message=Post updated successfully!');\n      }\n    }\n  }, [state, toast, router]);\n\n  return (\n    <Card className=\"w-full max-w-2xl mx-auto\">\n      <CardHeader>\n        <CardTitle className=\"text-3xl font-headline\">Edit Your Post</CardTitle>\n        <CardDescription>Make changes to your group order details.</CardDescription>\n      </CardHeader>\n      <CardContent>\n        <form ref={formRef} action={formAction} className=\"space-y-6\">\n          <input type=\"hidden\" name=\"postId\" value={post.id} />\n          \n          <div className=\"space-y-2\">\n            <Label htmlFor=\"title\">Post Title / Main Discount</Label>\n            <Input\n              id=\"title\"\n              name=\"details.title\"\n              defaultValue={post.details.title}\n              placeholder=\"e.g. ₹100 Off, Free Delivery, BOGO\"\n              required\n            />\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"restaurant\">Restaurant</Label>\n              <Input\n                id=\"restaurant\"\n                name=\"details.restaurant\"\n                defaultValue={post.details.restaurant}\n                placeholder=\"e.g. Domino's, Zomato, Swiggy\"\n                required\n              />\n            </div>\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"deadline\">Order Deadline</Label>\n              <Input\n                id=\"deadline\"\n                name=\"timestamps.deadline\"\n                type=\"datetime-local\"\n                defaultValue={formatForDateTimeLocal(post.timestamps.deadline)}\n                required\n              />\n            </div>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"totalAmount\">Total Order Amount (₹)</Label>\n              <Input\n                id=\"totalAmount\"\n                name=\"order.totalAmount\"\n                type=\"number\"\n                defaultValue={post.order.totalAmount}\n                placeholder=\"e.g. 399\"\n                required\n                min=\"0\"\n              />\n            </div>\n            <div className=\"space-y-2\">\n              <Label>Your Contribution (₹)</Label>\n              <Input\n                id=\"contributionAmount\"\n                name=\"order.contributionAmount\"\n                type=\"number\"\n                defaultValue={post.order.contributionAmount}\n                placeholder=\"e.g. 250\"\n                required\n                min=\"0\"\n              />\n            </div>\n          </div>\n\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"notes\">Notes</Label>\n            <Textarea\n              id=\"notes\"\n              name=\"details.notes\"\n              defaultValue={post.details.notes}\n              placeholder=\"e.g. Only veg allowed, I'm ordering a Medium Pizza\"\n            />\n            <p className=\"text-xs text-muted-foreground\">\n              Share what you are ordering, any special instructions, or how to coordinate.\n            </p>\n          </div>\n\n          <SubmitButton />\n        </form>\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 527, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/%40radix-ui/react-label/src/label.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Primitive } from '@radix-ui/react-primitive';\n\n/* -------------------------------------------------------------------------------------------------\n * Label\n * -----------------------------------------------------------------------------------------------*/\n\nconst NAME = 'Label';\n\ntype LabelElement = React.ElementRef<typeof Primitive.label>;\ntype PrimitiveLabelProps = React.ComponentPropsWithoutRef<typeof Primitive.label>;\ninterface LabelProps extends PrimitiveLabelProps {}\n\nconst Label = React.forwardRef<LabelElement, LabelProps>((props, forwardedRef) => {\n  return (\n    <Primitive.label\n      {...props}\n      ref={forwardedRef}\n      onMouseDown={(event) => {\n        // only prevent text selection if clicking inside the label itself\n        const target = event.target as HTMLElement;\n        if (target.closest('button, input, select, textarea')) return;\n\n        props.onMouseDown?.(event);\n        // prevent text selection when double clicking label\n        if (!event.defaultPrevented && event.detail > 1) event.preventDefault();\n      }}\n    />\n  );\n});\n\nLabel.displayName = NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = Label;\n\nexport {\n  Label,\n  //\n  Root,\n};\nexport type { LabelProps };\n"],"names":[],"mappings":";;;;;AAAA,YAAY,WAAW;AACvB,SAAS,iBAAiB;AActB;;;;;AARJ,IAAM,OAAO;AAMb,IAAM,kNAAc,aAAA,EAAqC,CAAC,OAAO,iBAAiB;IAChF,OACE,aAAA,GAAA,CAAA,GAAA,uNAAA,CAAA,MAAA,wKAAC,YAAA,CAAU,KAAA,EAAV;QACE,GAAG,KAAA;QACJ,KAAK;QACL,aAAa,CAAC,UAAU;YAEtB,MAAM,SAAS,MAAM,MAAA;YACrB,IAAI,OAAO,OAAA,CAAQ,iCAAiC,EAAG,CAAA;YAEvD,MAAM,WAAA,GAAc,KAAK;YAEzB,IAAI,CAAC,MAAM,gBAAA,IAAoB,MAAM,MAAA,GAAS,EAAG,CAAA,MAAM,cAAA,CAAe;QACxE;IAAA;AAGN,CAAC;AAED,MAAM,WAAA,GAAc;AAIpB,IAAM,OAAO","ignoreList":[0],"debugId":null}}]
}