{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 223, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.5-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 244, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/restaurant-filtering.ts"],"sourcesContent":["'use server';\n\n/**\n * @fileOverview Restaurant filtering AI agent.\n *\n * - filterRestaurants - A function that suggests restaurants based on user location, order history, and trends.\n * - FilterRestaurantsInput - The input type for the filterRestaurants function.\n * - FilterRestaurantsOutput - The return type for the filterRestaurants function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst FilterRestaurantsInputSchema = z.object({\n  location: z.string().describe('The user\\u2019s current location.'),\n  pastOrders: z.string().describe('A list of the user\\u2019s past orders.'),\n  currentTrends: z.string().describe('Current popular restaurants in the area.'),\n});\nexport type FilterRestaurantsInput = z.infer<typeof FilterRestaurantsInputSchema>;\n\nconst FilterRestaurantsOutputSchema = z.object({\n  suggestedRestaurants: z\n    .array(z.string())\n    .describe('A list of suggested restaurants based on the input data.'),\n});\nexport type FilterRestaurantsOutput = z.infer<typeof FilterRestaurantsOutputSchema>;\n\nexport async function filterRestaurants(input: FilterRestaurantsInput): Promise<FilterRestaurantsOutput> {\n  return filterRestaurantsFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'filterRestaurantsPrompt',\n  input: {schema: FilterRestaurantsInputSchema},\n  output: {schema: FilterRestaurantsOutputSchema},\n  prompt: `You are a restaurant recommendation expert. Based on the user's location, past orders, and current trends, suggest a list of restaurants.\n\nLocation: {{{location}}}\nPast Orders: {{{pastOrders}}}\nCurrent Trends: {{{currentTrends}}}\n\nSuggest a list of restaurants:`,\n});\n\nconst filterRestaurantsFlow = ai.defineFlow(\n  {\n    name: 'filterRestaurantsFlow',\n    inputSchema: FilterRestaurantsInputSchema,\n    outputSchema: FilterRestaurantsOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;AAEA;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,+BAA+B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC5C,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC9B,YAAY,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAChC,eAAe,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AACrC;AAGA,MAAM,gCAAgC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC7C,sBAAsB,uIAAA,CAAA,IAAC,CACpB,KAAK,CAAC,uIAAA,CAAA,IAAC,CAAC,MAAM,IACd,QAAQ,CAAC;AACd;AAGO,eAAe,kBAAkB,KAA6B;IACnE,OAAO,sBAAsB;AAC/B;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAC,QAAQ;IAA4B;IAC5C,QAAQ;QAAC,QAAQ;IAA6B;IAC9C,QAAQ,CAAC;;;;;;8BAMmB,CAAC;AAC/B;AAEA,MAAM,wBAAwB,mHAAA,CAAA,KAAE,CAAC,UAAU,CACzC;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,OAAO;IAC9B,OAAO;AACT;;;IA1BoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 309, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/actions.ts"],"sourcesContent":["// @ts-nocheck\n'use server';\n\nimport { z } from 'zod';\nimport { cookies } from 'next/headers';\nimport { redirect } from 'next/navigation';\nimport { revalidatePath } from 'next/cache';\n\nimport { createPost, findUserByEmail, updateUser, createUserInDb, getUserById } from '@/lib/data';\nimport { filterRestaurants } from '@/ai/flows/restaurant-filtering';\nimport { auth as adminAuth } from 'firebase-admin';\nimport { db } from './firebase-admin';\n\nexport async function verifyAndSignInAction(idToken: string) {\n  console.log('actions: verifyAndSignInAction started.');\n  try {\n    if (!idToken) {\n      return { success: false, message: 'No token provided.' };\n    }\n    const decodedToken = await adminAuth().verifyIdToken(idToken);\n    console.log('actions: ID token verified successfully. Decoded token:', decodedToken);\n\n    const uid = decodedToken.uid;\n    const email = decodedToken.email;\n    const name = decodedToken.name;\n    const photoURL = decodedToken.picture;\n\n    if (!email || !name) {\n      console.error('actions: Google account missing email or name.');\n      return { success: false, message: 'Google account must have an email and name.' };\n    }\n\n    if (!email.endsWith('@iitdh.ac.in')) {\n      console.error(`actions: Email is not from @iitdh.ac.in domain: ${email}`);\n      return { success: false, message: `Only users with a @iitdh.ac.in email can sign up. Your email is ${email}.` };\n    }\n\n    console.log(`actions: Attempting to find user with email: ${email}`);\n    let user = await findUserByEmail(email);\n    let userId: string;\n\n    if (!user) {\n      console.log('actions: User not found. Creating new user in DB...');\n      const newUser = await createUserInDb({\n        name: name,\n        email: email,\n        photoURL: photoURL,\n      });\n      userId = newUser.id;\n      console.log('actions: New user created with ID:', userId);\n    } else {\n      userId = user.id;\n      console.log('actions: Existing user found with ID:', userId);\n    }\n\n    const cookieStore = cookies();\n    cookieStore.set('session_userId', userId, {\n      httpOnly: true,\n      secure: process.env.NODE_ENV === 'production',\n      maxAge: 60 * 60 * 24, // 1 day\n      path: '/',\n    });\n    cookieStore.set('session_authId', uid, {\n      httpOnly: true,\n      secure: process.env.NODE_ENV === 'production',\n      maxAge: 60 * 60 * 24, // 1 day\n      path: '/',\n    });\n\n    revalidatePath('/');\n    console.log('actions: Session cookie set successfully.');\n\n    return { success: true };\n  } catch (error: any) {\n    console.error('actions: Error during token verification:', error);\n    return { success: false, message: `Internal error: ${error.message}` };\n  }\n}\n\n\nexport async function logoutAction() {\n  const cookieStore = cookies();\n  const authId = cookieStore.get('session_authId')?.value;\n  if (authId) {\n    try {\n      await adminAuth().revokeRefreshTokens(authId);\n    } catch (error) {\n      console.error('Error revoking refresh tokens:', error);\n    }\n  }\n  cookieStore.delete('session_userId');\n  cookieStore.delete('session_authId');\n  redirect('/login');\n}\n\nconst postSchema = z.object({\n  restaurant: z.string().min(1, 'Restaurant is required.'),\n  minAmount: z.coerce.number().min(0),\n  maxAmount: z.coerce.number().min(0),\n  deadline: z.coerce.date(),\n  notes: z.string().optional(),\n  authorId: z.string(),\n  authorName: z.string(),\n  contact: z.object({\n    phone: z.string(),\n    whatsapp: z.string(),\n  }),\n  location: z.object({\n    hostel: z.string(),\n    society: z.string(),\n  }),\n});\n\nexport async function createPostAction(prevState: any, formData: FormData) {\n  const rawData = {\n    ...Object.fromEntries(formData),\n    contact: JSON.parse(formData.get('contact') as string),\n    location: JSON.parse(formData.get('location') as string),\n  };\n  \n  const parsed = postSchema.safeParse(rawData);\n\n  if (!parsed.success) {\n    console.error(parsed.error.flatten().fieldErrors);\n    return { message: 'Invalid post data. Please check your inputs.' };\n  }\n  \n  if (parsed.data.minAmount > parsed.data.maxAmount) {\n    return { message: 'Minimum amount cannot be greater than maximum amount.' };\n  }\n\n  await createPost(parsed.data);\n  revalidatePath('/');\n  redirect('/');\n}\n\nconst profileSchema = z.object({\n  id: z.string(),\n  name: z.string().min(2, 'Name must be at least 2 characters.'),\n  phone: z.string().min(10, 'Please enter a valid phone number.'),\n  whatsapp: z.string().min(10, 'Please enter a valid WhatsApp number.'),\n  hostel: z.string().min(1, 'Hostel/PG name is required.'),\n  society: z.string().min(1, 'Society/Area name is required.'),\n});\n\nexport async function updateProfileAction(prevState: any, formData: FormData) {\n  const parsed = profileSchema.safeParse(Object.fromEntries(formData));\n\n  if (!parsed.success) {\n    return { message: 'Invalid profile data.' };\n  }\n\n  await updateUser(parsed.data.id, {\n    name: parsed.data.name,\n    contact: { phone: parsed.data.phone, whatsapp: parsed.data.whatsapp },\n    location: { hostel: parsed.data.hostel, society: parsed.data.society },\n  });\n\n  revalidatePath('/profile');\n  revalidatePath('/');\n  return { message: 'Profile updated successfully!' };\n}\n\nexport async function subscribeAction(plan: 'daily' | 'weekly' | 'monthly', userId: string) {\n  let expiryDays = 0;\n  if (plan === 'daily') expiryDays = 1;\n  if (plan === 'weekly') expiryDays = 7;\n  if (plan === 'monthly') expiryDays = 30;\n\n  const expiryDate = new Date();\n  expiryDate.setDate(expiryDate.getDate() + expiryDays);\n\n  await updateUser(userId, {\n    subscription: {\n      status: 'active',\n      plan: plan,\n      expiry: expiryDate.toISOString(),\n    },\n  });\n\n  revalidatePath('/pricing');\n  revalidatePath('/');\n  revalidatePath('/profile');\n}\n\nexport async function getRestaurantSuggestions(location: string) {\n  try {\n    const result = await filterRestaurants({\n      location,\n      pastOrders: \"Pizza, Burgers\", // Mock data\n      currentTrends: \"Italian, Fast Food\", // Mock data\n    });\n    return result.suggestedRestaurants;\n  } catch (error) {\n    console.error(\"AI suggestion failed:\", error);\n    return [];\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 546, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/%28auth%29/login/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {getAuthId as '00400651e8823f97b3de05f951d0233f99977a63e4'} from 'ACTIONS_MODULE0'\nexport {getUserId as '0059518ee421a3ff54122d9a29b9249dfdd56384ef'} from 'ACTIONS_MODULE0'\nexport {getCurrentUser as '00c7cf5be85046cc79dbca603be7a72197af0f20e9'} from 'ACTIONS_MODULE0'\nexport {logoutAction as '004d49033eb565a117b1d8b30854d8c4f35e240335'} from 'ACTIONS_MODULE1'\nexport {verifyAndSignInAction as '40a73254002cde1c95d945c197624b37db4228a7b2'} from 'ACTIONS_MODULE1'\n"],"names":[],"mappings":";AAAA;AAGA","debugId":null}},
    {"offset": {"line": 619, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/auth-forms.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const AuthForm = registerClientReference(\n    function() { throw new Error(\"Attempted to call AuthForm() from the server but AuthForm is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/auth-forms.tsx <module evaluation>\",\n    \"AuthForm\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,WAAW,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,+DACA","debugId":null}},
    {"offset": {"line": 633, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/auth-forms.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const AuthForm = registerClientReference(\n    function() { throw new Error(\"Attempted to call AuthForm() from the server but AuthForm is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/auth-forms.tsx\",\n    \"AuthForm\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,WAAW,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,2CACA","debugId":null}},
    {"offset": {"line": 647, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 657, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/%28auth%29/login/page.tsx"],"sourcesContent":["import { AuthForm } from '@/components/auth-forms';\nimport { getCurrentUser } from '@/lib/session';\nimport { redirect } from 'next/navigation';\n\nexport default async function LoginPage() {\n  const user = await getCurrentUser();\n  if (user) {\n    redirect('/');\n  }\n\n  return <AuthForm />;\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AAAA;;;;;AAEe,eAAe;IAC5B,MAAM,OAAO,MAAM,CAAA,GAAA,qHAAA,CAAA,iBAAc,AAAD;IAChC,IAAI,MAAM;QACR,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE;IACX;IAEA,qBAAO,8OAAC,mIAAA,CAAA,WAAQ;;;;;AAClB","debugId":null}}]
}