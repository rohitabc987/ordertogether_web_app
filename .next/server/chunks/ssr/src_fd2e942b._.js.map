{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n\nexport function formatCurrency(amount: number) {\n  return new Intl.NumberFormat('en-IN', {\n    style: 'currency',\n    currency: 'INR',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0,\n  }).format(amount);\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB;AAEO,SAAS,eAAe,MAAc;IAC3C,OAAO,IAAI,KAAK,YAAY,CAAC,SAAS;QACpC,OAAO;QACP,UAAU;QACV,uBAAuB;QACvB,uBAAuB;IACzB,GAAG,MAAM,CAAC;AACZ","debugId":null}},
    {"offset": {"line": 32, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/toaster.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Toaster = registerClientReference(\n    function() { throw new Error(\"Attempted to call Toaster() from the server but Toaster is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/toaster.tsx <module evaluation>\",\n    \"Toaster\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,UAAU,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACzC;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,+DACA","debugId":null}},
    {"offset": {"line": 46, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/toaster.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Toaster = registerClientReference(\n    function() { throw new Error(\"Attempted to call Toaster() from the server but Toaster is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/toaster.tsx\",\n    \"Toaster\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,UAAU,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACzC;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,2CACA","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 70, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/providers.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const AuthProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call AuthProvider() from the server but AuthProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/providers.tsx <module evaluation>\",\n    \"AuthProvider\",\n);\nexport const Providers = registerClientReference(\n    function() { throw new Error(\"Attempted to call Providers() from the server but Providers is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/providers.tsx <module evaluation>\",\n    \"Providers\",\n);\nexport const useAuth = registerClientReference(\n    function() { throw new Error(\"Attempted to call useAuth() from the server but useAuth is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/providers.tsx <module evaluation>\",\n    \"useAuth\",\n);\n"],"names":[],"mappings":";;;;;AAAA;;AACO,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,mDACA;AAEG,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,mDACA;AAEG,MAAM,UAAU,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACzC;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,mDACA","debugId":null}},
    {"offset": {"line": 92, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/providers.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const AuthProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call AuthProvider() from the server but AuthProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/providers.tsx\",\n    \"AuthProvider\",\n);\nexport const Providers = registerClientReference(\n    function() { throw new Error(\"Attempted to call Providers() from the server but Providers is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/providers.tsx\",\n    \"Providers\",\n);\nexport const useAuth = registerClientReference(\n    function() { throw new Error(\"Attempted to call useAuth() from the server but useAuth is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/providers.tsx\",\n    \"useAuth\",\n);\n"],"names":[],"mappings":";;;;;AAAA;;AACO,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,+BACA;AAEG,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,+BACA;AAEG,MAAM,UAAU,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACzC;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,+BACA","debugId":null}},
    {"offset": {"line": 114, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 124, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/header.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Header = registerClientReference(\n    function() { throw new Error(\"Attempted to call Header() from the server but Header is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/header.tsx <module evaluation>\",\n    \"Header\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,SAAS,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,2DACA","debugId":null}},
    {"offset": {"line": 138, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/header.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Header = registerClientReference(\n    function() { throw new Error(\"Attempted to call Header() from the server but Header is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/header.tsx\",\n    \"Header\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,SAAS,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,uCACA","debugId":null}},
    {"offset": {"line": 152, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 162, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/data.ts"],"sourcesContent":["// @ts-nocheck\nimport type { User, Post, SubscriptionPlan, SubscriptionStatus } from './types';\n\n// In-memory \"database\"\nlet users: User[] = [\n  {\n    id: 'user1',\n    name: 'Rohan Sharma',\n    email: 'rohan@example.com',\n    photoURL: 'https://picsum.photos/seed/user1/200/200',\n    password: 'password123',\n    contact: { phone: '9876543210', whatsapp: '9876543210' },\n    location: { hostel: 'Green View PG', society: 'Koramangala 1st Block' },\n    subscription: {\n      status: 'active',\n      plan: 'monthly',\n      expiry: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toISOString(),\n    },\n  },\n  {\n    id: 'user2',\n    name: 'Priya Singh',\n    email: 'priya@example.com',\n    photoURL: 'https://picsum.photos/seed/user2/200/200',\n    password: 'password123',\n    contact: { phone: '8765432109', whatsapp: '8765432109' },\n    location: { hostel: 'Green View PG', society: 'Koramangala 1st Block' },\n    subscription: { status: 'inactive', plan: null, expiry: null },\n  },\n  {\n    id: 'user3',\n    name: 'Amit Patel',\n    email: 'amit@example.com',\n    photoURL: 'https://picsum.photos/seed/user3/200/200',\n    password: 'password123',\n    contact: { phone: '7654321098', whatsapp: '7654321098' },\n    location: { hostel: 'Sunrise Hostel', society: 'Indiranagar' },\n    subscription: { status: 'active', plan: 'weekly', expiry: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000).toISOString() },\n  },\n];\n\nlet posts: Post[] = [\n  {\n    id: 'post1',\n    authorId: 'user1',\n    authorName: 'Rohan Sharma',\n    contact: { phone: '9876543210', whatsapp: '9876543210' },\n    location: { hostel: 'Green View PG', society: 'Koramangala 1st Block' },\n    restaurant: 'Truffles',\n    minAmount: 300,\n    maxAmount: 500,\n    deadline: new Date(Date.now() + 2 * 60 * 60 * 1000).toISOString(),\n    notes: 'Looking for someone to share a burger and shake order.',\n    createdAt: new Date().toISOString(),\n  },\n  {\n    id: 'post2',\n    authorId: 'user2',\n    authorName: 'Priya Singh',\n    contact: { phone: '8765432109', whatsapp: '8765432109' },\n    location: { hostel: 'Green View PG', society: 'Koramangala 1st Block' },\n    restaurant: 'Swiggy',\n    minAmount: 150,\n    maxAmount: 250,\n    deadline: new Date(Date.now() + 4 * 60 * 60 * 1000).toISOString(),\n    notes: 'Just need to order some groceries. Anyone want to join?',\n    createdAt: new Date().toISOString(),\n  },\n  {\n    id: 'post3',\n    authorId: 'user3',\n    authorName: 'Amit Patel',\n    contact: { phone: '7654321098', whatsapp: '7654321098' },\n    location: { hostel: 'Sunrise Hostel', society: 'Indiranagar' },\n    restaurant: 'Leon Grill',\n    minAmount: 200,\n    maxAmount: 400,\n    deadline: new Date(Date.now() + 1 * 60 * 60 * 1000).toISOString(),\n    notes: 'Craving some peri peri chicken!',\n    createdAt: new Date().toISOString(),\n  },\n];\n\n// Mock API functions\nexport async function findUserByEmail(email: string): Promise<User | undefined> {\n  return users.find(user => user.email === email);\n}\n\nexport async function getUserById(userId: string): Promise<User | undefined> {\n  return users.find(user => user.id === userId);\n}\n\nexport async function getPostsForUser(society: string): Promise<Post[]> {\n  return posts\n    .filter(post => post.location.society === society)\n    .sort((a, b) => new Date(a.deadline).getTime() - new Date(b.deadline).getTime());\n}\n\nexport async function createPost(postData: Omit<Post, 'id' | 'createdAt'>): Promise<Post> {\n  const newPost: Post = {\n    ...postData,\n    id: `post${posts.length + 1}`,\n    createdAt: new Date().toISOString(),\n  };\n  posts.push(newPost);\n  return newPost;\n}\n\nexport async function updateUser(userId: string, updates: Partial<User>): Promise<User> {\n  users = users.map(user => {\n    if (user.id === userId) {\n      return { ...user, ...updates };\n    }\n    return user;\n  });\n  return users.find(user => user.id === userId);\n}\n\nexport async function createUserInDb(data: { name: string; email: string; photoURL: string | null; password?: string }): Promise<User> {\n  const newUser: User = {\n    id: `user${users.length + 1}`,\n    name: data.name,\n    email: data.email,\n    photoURL: data.photoURL,\n    password: data.password || '', // In a real app, hash this\n    contact: { phone: '', whatsapp: '' },\n    location: { hostel: '', society: '' },\n    subscription: { status: 'inactive', plan: null, expiry: null },\n  };\n  users.push(newUser);\n  return newUser;\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 353, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/session.ts"],"sourcesContent":["'use server';\n\nimport { cookies } from 'next/headers';\nimport { getUserById } from './data';\nimport type { User } from './types';\n\nexport async function getUserId(): Promise<string | undefined> {\n  const sessionCookie = cookies().get('session_userId');\n  return sessionCookie?.value;\n}\n\nexport async function getCurrentUser(): Promise<User | null> {\n  const userId = await getUserId();\n  if (!userId) {\n    return null;\n  }\n  const user = await getUserById(userId);\n  return user || null;\n}\n"],"names":[],"mappings":";;;;;;AAEA;AACA;;;;;;AAGO,eAAe;IACpB,MAAM,gBAAgB,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD,IAAI,GAAG,CAAC;IACpC,OAAO,eAAe;AACxB;AAEO,eAAe;IACpB,MAAM,SAAS,MAAM;IACrB,IAAI,CAAC,QAAQ;QACX,OAAO;IACT;IACA,MAAM,OAAO,MAAM,CAAA,GAAA,kHAAA,CAAA,cAAW,AAAD,EAAE;IAC/B,OAAO,QAAQ;AACjB;;;IAZsB;IAKA;;AALA,+OAAA;AAKA,+OAAA","debugId":null}},
    {"offset": {"line": 391, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/layout.tsx"],"sourcesContent":["import type { Metadata } from 'next';\nimport './globals.css';\nimport { cn } from '@/lib/utils';\nimport { Toaster } from '@/components/ui/toaster';\nimport { Providers } from '@/providers';\nimport { Header } from '@/components/header';\nimport { getCurrentUser } from '@/lib/session';\n\nexport const metadata: Metadata = {\n  title: 'OrderlyGather',\n  description: 'Combine small orders, save on delivery fees.',\n};\n\nexport default async function RootLayout({\n  children,\n}: Readonly<{\n  children: React.ReactNode;\n}>) {\n  const user = await getCurrentUser();\n\n  return (\n    <html lang=\"en\" suppressHydrationWarning>\n      <head>\n        <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n        <link\n          rel=\"preconnect\"\n          href=\"https://fonts.gstatic.com\"\n          crossOrigin=\"anonymous\"\n        />\n        <link\n          href=\"https://fonts.googleapis.com/css2?family=PT+Sans:ital,wght@0,400;0,700;1,400;1,700&display=swap\"\n          rel=\"stylesheet\"\n        />\n      </head>\n      <body\n        className={cn(\n          'min-h-screen bg-background font-body antialiased'\n        )}\n      >\n        <Providers user={user}>\n          <div className=\"relative flex min-h-screen flex-col\">\n            <Header />\n            <main className=\"flex-1\">{children}</main>\n          </div>\n          <Toaster />\n        </Providers>\n      </body>\n    </html>\n  );\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;AAEO,MAAM,WAAqB;IAChC,OAAO;IACP,aAAa;AACf;AAEe,eAAe,WAAW,EACvC,QAAQ,EAGR;IACA,MAAM,OAAO,MAAM,CAAA,GAAA,qHAAA,CAAA,iBAAc,AAAD;IAEhC,qBACE,8OAAC;QAAK,MAAK;QAAK,wBAAwB;;0BACtC,8OAAC;;kCACC,8OAAC;wBAAK,KAAI;wBAAa,MAAK;;;;;;kCAC5B,8OAAC;wBACC,KAAI;wBACJ,MAAK;wBACL,aAAY;;;;;;kCAEd,8OAAC;wBACC,MAAK;wBACL,KAAI;;;;;;;;;;;;0BAGR,8OAAC;gBACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV;0BAGF,cAAA,8OAAC,iHAAA,CAAA,YAAS;oBAAC,MAAM;;sCACf,8OAAC;4BAAI,WAAU;;8CACb,8OAAC,4HAAA,CAAA,SAAM;;;;;8CACP,8OAAC;oCAAK,WAAU;8CAAU;;;;;;;;;;;;sCAE5B,8OAAC,mIAAA,CAAA,UAAO;;;;;;;;;;;;;;;;;;;;;;AAKlB","debugId":null}}]
}