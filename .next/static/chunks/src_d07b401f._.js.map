{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/actions.ts"],"sourcesContent":["'use server';\n\nimport { revalidatePath } from 'next/cache';\nimport { Post, User } from './types';\nimport {FieldValue,Timestamp,} from 'firebase-admin/firestore';\nimport { db as adminDb, auth as adminAuth } from './firebase-admin';\nimport { cookies } from 'next/headers';\nimport { findUserByEmail, createUserInDb, getAuthorAndInstitution, getPostsByAuthorId, getPostById as fetchPostById } from './data';\n\nfunction convertFirestoreTimestampToDate(timestamp: any): Date | null {\n  if (!timestamp) {\n    return null;\n  }\n  if (typeof timestamp.seconds === 'number' && typeof timestamp.nanoseconds === 'number') {\n    return new Date(timestamp.seconds * 1000 + timestamp.nanoseconds / 1000000);\n  }\n  const date = new Date(timestamp);\n  if (!isNaN(date.getTime())) {\n    return date;\n  }\n  return null;\n}\n\nexport async function createPostAction(prevState: any, formData: FormData): Promise<{ success: boolean; message?: string; post?: Post }> {\n  const authorId = formData.get('authorId') as string;\n\n  try {\n    const authorResult = await getAuthorAndInstitution(authorId);\n    if (!authorResult) {\n      return { success: false, message: 'Error: Could not find author or institution.' };\n    }\n\n    const { authorData } = authorResult;\n\n    const deadlineStr = formData.get('timestamps.deadline') as string;\n    const deadline = Timestamp.fromDate(new Date(deadlineStr));\n\n    const newPostData: Omit<Post, 'id' | 'author'> = {\n      authorId,\n      authorInfo: {\n        authorName: authorData.userProfile.name,\n        gender: authorData.userProfile.gender || 'prefer_not_to_say',\n      },\n      details: {\n        title: formData.get('details.title') as string,\n        restaurant: formData.get('details.restaurant') as string,\n        notes: formData.get('details.notes') as string,\n      },\n      order: {\n        totalAmount: parseFloat(formData.get('order.totalAmount') as string),\n        contributionAmount: parseFloat(formData.get('order.contributionAmount') as string),\n      },\n      timestamps: {\n        createdAt: FieldValue.serverTimestamp() as any,\n        updatedAt: FieldValue.serverTimestamp() as any,\n        deadline: deadline as any,\n      },\n      location: {\n        institutionName: authorData.institution?.institutionName ?? undefined,\n        area: authorData.location?.area ?? undefined,\n        city: authorData.location?.city ?? undefined,\n      },\n    };\n\n    const docRef = await adminDb.collection('posts').add(newPostData);\n    const newPost = await fetchPostById(docRef.id);\n    \n    revalidatePath('/');\n    revalidatePath('/my-posts');\n    \n    if (!newPost) {\n        return { success: false, message: \"Post created but failed to retrieve.\" };\n    }\n\n    // Return the newly created post so the client can update its cache\n    return { success: true, post: JSON.parse(JSON.stringify(newPost)) };\n\n  } catch (error) {\n    console.error('Error creating post:', error);\n    return { success: false, message: `Error creating post: ${error instanceof Error ? error.message : 'Unknown error'}` };\n  }\n}\n\nexport async function deletePostAction(postId: string, userId: string) {\n    try {\n        await adminDb.collection('posts').doc(postId).delete();\n        revalidatePath('/my-posts');\n        return { success: true, message: 'Post deleted successfully.' };\n    } catch (error) {\n        console.error('Error deleting post:', error);\n        return { success: false, message: 'Failed to delete post.' };\n    }\n}\n\nexport async function updatePostAction(prevState: any, formData: FormData): Promise<{ success: boolean; message?: string; post?: Post }> {\n    const postId = formData.get('postId') as string;\n    const userId = formData.get('userId') as string;\n    if (!postId || !userId) {\n        return { success: false, message: 'Error: Post ID or User ID is missing.' };\n    }\n\n    try {\n        const deadlineStr = formData.get('timestamps.deadline') as string;\n        const deadline = Timestamp.fromDate(new Date(deadlineStr));\n\n        const updates = {\n            'details.title': formData.get('details.title') as string,\n            'details.restaurant': formData.get('details.restaurant') as string,\n            'details.notes': formData.get('details.notes') as string,\n            'order.totalAmount': parseFloat(formData.get('order.totalAmount') as string),\n            'order.contributionAmount': parseFloat(formData.get('order.contributionAmount') as string),\n            'timestamps.deadline': deadline,\n            'timestamps.updatedAt': FieldValue.serverTimestamp(),\n        };\n\n        await adminDb.collection('posts').doc(postId).update(updates);\n        const updatedPost = await fetchPostById(postId);\n\n        revalidatePath('/');\n        revalidatePath('/my-posts');\n        revalidatePath(`/edit-post/${postId}`);\n\n        if (!updatedPost) {\n            return { success: false, message: \"Post updated but failed to retrieve.\" };\n        }\n\n        return { success: true, message: 'Post updated successfully!', post: JSON.parse(JSON.stringify(updatedPost)) };\n    } catch (error) {\n        console.error(`Error updating post ${postId}:`, error);\n        return { success: false, message: `Error updating post: ${error instanceof Error ? error.message : 'Unknown error'}` };\n    }\n}\n\n\nexport async function updateProfileAction(prevState: any, formData: FormData) {\n    const userId = formData.get('id') as string;\n    if (!userId) {\n        return { message: 'Error: User ID is missing.' };\n    }\n\n    const oneWeek = 7 * 24 * 60 * 60 * 1000;\n\n    try {\n        const userRef = adminDb.collection('users').doc(userId);\n        const userDoc = await userRef.get();\n        if (!userDoc.exists) {\n            return { message: 'Error: User not found.' };\n        }\n        \n        const userData = userDoc.data() as User;\n        const lastUpdateStr = userData.userProfile?.lastProfileUpdate;\n        \n        if (lastUpdateStr) {\n            const lastUpdate = new Date(lastUpdateStr);\n            if ((new Date().getTime() - lastUpdate.getTime()) < oneWeek) {\n                 return { message: 'Profile can only be updated once a week.' };\n            }\n        }\n        \n        const updates: Record<string, any> = {\n            'userProfile.name': formData.get('name'),\n            'userProfile.lastProfileUpdate': FieldValue.serverTimestamp(),\n            'contact.phone': formData.get('contactNumber'),\n            'contact.shareContact': formData.get('shareContact') === 'on',\n            'institution.institutionType': formData.get('institutionType'),\n            'institution.institutionName': formData.get('institutionName'),\n            'location.area': formData.get('area'),\n            'location.city': formData.get('city'),\n            'location.pinCode': formData.get('pinCode'),\n        };\n\n        await userRef.update(updates);\n        \n        revalidatePath('/profile');\n        revalidatePath('/');\n\n        return { message: 'Profile updated successfully!' };\n    } catch (error) {\n        console.error('Error updating profile:', error);\n        return { message: `Error updating profile: ${error instanceof Error ? error.message : 'Unknown error'}` };\n    }\n}\n\n\nexport async function deactivateSinglePostPassAction(userId: string) {\n  try {\n    const userRef = adminDb.collection('users').doc(userId);\n    const userDoc = await userRef.get();\n\n    if (!userDoc.exists) {\n      return { success: false, message: 'User not found.' };\n    }\n\n    const user = userDoc.data() as User;\n\n    if (user.subscription?.plan === 'single-post' && user.subscription?.status === 'active') {\n      await userRef.update({\n        'subscription.status': 'inactive',\n        'subscription.postsViewed': 1, \n      });\n\n      revalidatePath('/'); \n\n      return { success: true, message: 'Single-post pass used and deactivated.' };\n    } else {\n      return { success: false, message: 'No active single-post pass to deactivate.' };\n    }\n  } catch (error) {\n    console.error('Error deactivating single-post pass:', error);\n    return { success: false, message: 'An unexpected error occurred.' };\n  }\n}\n\n\nexport async function verifyAndSignInAction(idToken: string) {\n  try {\n    const decodedToken = await adminAuth.verifyIdToken(idToken);\n    const uid = decodedToken.uid;\n    const email = decodedToken.email;\n\n    if (!email) {\n      return { success: false, message: 'Email not found in token.' };\n    }\n\n    let user = await findUserByEmail(email);\n\n    if (!user) {\n      const newUser = {\n        name: decodedToken.name || 'New User',\n        email: email,\n        photoURL: decodedToken.picture || null,\n      };\n      user = await createUserInDb(newUser);\n    }\n    \n    const cookieStore = await cookies();\n    cookieStore.set('session_userId', user.id, { httpOnly: true, secure: process.env.NODE_ENV === 'production' });\n\n    return { success: true, user };\n  } catch (error: any) {\n    return { success: false, message: error.message || 'Authentication failed.' };\n  }\n}\n\nexport async function logoutAction() {\n    const cookieStore = await cookies();\n    cookieStore.delete('session_userId');\n}\n\n\nexport async function subscribeAction(planId: 'single-post' | 'daily' | 'weekly' | 'monthly', userId: string) {\n  if (!userId) {\n    return { success: false, message: 'User not found.' };\n  }\n\n  try {\n    const userRef = adminDb.collection('users').doc(userId);\n\n    const now = new Date();\n    let expiry = new Date(now);\n\n    switch (planId) {\n      case 'daily':\n        expiry.setDate(now.getDate() + 1);\n        break;\n      case 'weekly':\n        expiry.setDate(now.getDate() + 7);\n        break;\n      case 'monthly':\n        expiry.setMonth(now.getMonth() + 1);\n        break;\n      case 'single-post':\n        expiry.setFullYear(now.getFullYear() + 1);\n        break;\n    }\n    \n    const subscriptionData = {\n      status: 'active' as const,\n      plan: planId,\n      startDate: Timestamp.fromDate(now),\n      expiry: Timestamp.fromDate(expiry),\n      postsViewed: 0,\n    };\n    \n    await userRef.update({\n        'subscription': subscriptionData\n    });\n\n    revalidatePath('/pricing');\n    revalidatePath('/profile');\n    revalidatePath('/');\n\n    return { success: true };\n  } catch (error: any) {\n    console.error('Subscription Error:', error);\n    return { success: false, message: error.message || 'An unexpected error occurred.' };\n  }\n}\n\nexport async function submitFeedbackAction(prevState: any, formData: FormData) {\n    const email = formData.get('email') as string;\n    const feedback = formData.get('feedback') as string;\n\n    if (!feedback) {\n        return { success: false, message: 'Feedback cannot be empty.' };\n    }\n\n    try {\n        await adminDb.collection('feedback').add({\n            email: email || 'anonymous',\n            feedback: feedback,\n            submittedAt: FieldValue.serverTimestamp(),\n        });\n        return { success: true, message: 'Your feedback has been submitted.' };\n    } catch (error) {\n        console.error('Feedback submission error:', error);\n        return { success: false, message: 'Something went wrong. Please try again.' };\n    }\n}\n\nexport async function updatePostViewCountAction(userId: string, count: number) {\n    if (!userId || count === 0) return;\n\n    const userRef = adminDb.collection('users').doc(userId);\n\n    try {\n        const userDoc = await userRef.get();\n        if (userDoc.exists) {\n            const currentCount = userDoc.data()?.subscription?.postsViewed || 0;\n            await userRef.update({\n                'subscription.postsViewed': currentCount + count\n            });\n        }\n    } catch (error) {\n        console.error(`Failed to update view count for user ${userId}:`, error);\n    }\n}\n\nexport async function getMyPostsAction(userId: string) {\n  if (!userId) {\n    return { success: false, message: 'User not found.', posts: [] };\n  }\n  try {\n    const posts = await getPostsByAuthorId(userId);\n    // Ensure data is serializable before sending to the client\n    return { success: true, posts: JSON.parse(JSON.stringify(posts)) };\n  } catch (error) {\n    console.error('Error fetching my posts:', error);\n    return { success: false, message: 'Failed to fetch posts.', posts: [] };\n  }\n}\n"],"names":[],"mappings":";;;;;;IAuBsB,mBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 59, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 98, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 133, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 236, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,SAAS,qKAAA,CAAA,OAAoB;AAEnC,MAAM,gBAAgB,qKAAA,CAAA,UAAuB;AAE7C,MAAM,eAAe,qKAAA,CAAA,SAAsB;AAE3C,MAAM,cAAc,qKAAA,CAAA,QAAqB;AAEzC,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,UAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;KAVP;AAaN,cAAc,WAAW,GAAG,qKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC;;0BACC,6LAAC;;;;;0BACD,6LAAC,qKAAA,CAAA,UAAuB;gBACtB,KAAK;gBACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+fACA;gBAED,GAAG,KAAK;;oBAER;kCACD,6LAAC,qKAAA,CAAA,QAAqB;wBAAC,WAAU;;0CAC/B,6LAAC,+LAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;0CACb,6LAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,qKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qDACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,qKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,kCAAoB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,cAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,kBAAkB,WAAW,GAAG,qKAAA,CAAA,cAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 387, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/create-post-form.tsx"],"sourcesContent":["'use client';\n\nimport { useActionState, useEffect, useState, useRef } from 'react';\nimport { useFormStatus } from 'react-dom';\nimport { useRouter } from 'next/navigation';\nimport { createPostAction } from '@/lib/actions';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Textarea } from '@/components/ui/textarea';\nimport { User, Post } from '@/lib/types';\nimport { useToast } from '@/hooks/use-toast';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from './ui/card';\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogDescription,\n} from '@/components/ui/dialog';\nimport { Info, CheckCircle2 } from 'lucide-react';\nimport { generateCatchyTitle } from '@/lib/utils';\n\nfunction SubmitButton() {\n  const { pending } = useFormStatus();\n  return (\n    <Button type=\"submit\" disabled={pending} className=\"w-full\">\n      {pending ? 'Creating Post...' : 'Create Post'}\n    </Button>\n  );\n}\n\nexport function CreatePostForm({ user }: { user: User }) {\n  const [state, formAction] = useActionState(createPostAction, null);\n  const { toast } = useToast();\n  const router = useRouter();\n  const formRef = useRef<HTMLFormElement>(null);\n  const [showSuccessDialog, setShowSuccessDialog] = useState(false);\n\n  const [formData, setFormData] = useState({\n    details: {\n      title: '',\n      restaurant: '',\n      notes: ''\n    },\n    order: {\n      totalAmount: '',\n      contributionAmount: '',\n    },\n    timestamps: {\n      deadline: '',\n    }\n  });\n\n  const [generatedTitle, setGeneratedTitle] = useState('Group order');\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const { name, value } = e.target;\n    const [section, field] = name.split('.');\n\n    setFormData(prev => ({\n      ...prev,\n      [section]: {\n        // @ts-ignore\n        ...prev[section],\n        [field]: value\n      }\n    }));\n  };\n\n  useEffect(() => {\n    if (!state) return;\n\n    if (state.success && state.post) {\n      setShowSuccessDialog(true);\n      // Add the new post to the cache\n      try {\n        const cachedPostsRaw = localStorage.getItem(`myPosts_${user.id}`);\n        const cachedPosts: Post[] = cachedPostsRaw ? JSON.parse(cachedPostsRaw) : [];\n        const updatedPosts = [state.post, ...cachedPosts];\n        localStorage.setItem(`myPosts_${user.id}`, JSON.stringify(updatedPosts));\n      } catch (e) {\n        console.warn(\"Could not update cache with new post\", e);\n      }\n\n    } else if (!state.success) {\n      toast({\n        title: 'Error',\n        description: state.message,\n        variant: 'destructive',\n      });\n    }\n  }, [state, toast, user.id]);\n\n  const handleDialogChange = (open: boolean) => {\n    if (!open) {\n        setShowSuccessDialog(false);\n        formRef.current?.reset();\n        setFormData({\n            details: { title: '', restaurant: '', notes: '' },\n            order: { totalAmount: '', contributionAmount: '' },\n            timestamps: { deadline: '' },\n        });\n    }\n  }\n\n  useEffect(() => {\n    const deadlineStr = formData.timestamps.deadline;\n    let formattedDeadline = '';\n\n    if (deadlineStr) {\n      const date = new Date(deadlineStr);\n\n      if (!isNaN(date.getTime())) {\n        const datePart = date.toLocaleDateString('en-US', {\n          year: 'numeric',\n          month: 'long',\n          day: 'numeric',\n        });\n\n        const timePart = date.toLocaleTimeString('en-US', {\n          hour: 'numeric',\n          minute: '2-digit',\n          second: '2-digit',\n          hour12: true,\n        });\n        \n        const offset = -date.getTimezoneOffset();\n        const sign = offset >= 0 ? '+' : '-';\n        const offsetHours = Math.floor(Math.abs(offset) / 60);\n        const offsetMinutes = Math.abs(offset) % 60;\n        const timezonePart = `UTC${sign}${String(offsetMinutes).padStart(2, '0')}`;\n\n        formattedDeadline = `${datePart} at ${timePart} ${timezonePart}`;\n      }\n    }\n\n    const partialPost: Partial<Post> = {\n      details: {\n        title: formData.details.title,\n        restaurant: formData.details.restaurant,\n        notes: formData.details.notes\n      },\n      order: {\n        totalAmount: parseFloat(formData.order.totalAmount) || 0,\n        contributionAmount: parseFloat(formData.order.contributionAmount) || 0,\n      },\n      timestamps: {\n        createdAt: new Date().toISOString(),\n        deadline: formattedDeadline,\n      }\n    };\n    setGeneratedTitle(generateCatchyTitle(partialPost));\n  }, [\n    formData.details.title,\n    formData.details.restaurant,\n    formData.details.notes,\n    formData.order.totalAmount,\n    formData.order.contributionAmount,\n    formData.timestamps.deadline\n  ]);\n\n  return (\n      <>\n    <Card className=\"w-full max-w-2xl mx-auto border-2 border-teal-100 shadow-lg\">\n      <CardHeader className=\"text-center bg-teal-50 rounded-t-lg p-4\">\n        <CardTitle className=\"text-3xl font-headline text-teal-800\">🎉 Create a New Order Post</CardTitle>\n        <CardDescription className=\"text-teal-600\">Let others in your building know you're ordering.</CardDescription>\n      </CardHeader>\n      <CardContent className=\"p-8\">\n        <form ref={formRef} action={formAction} className=\"space-y-2\">\n          <input type=\"hidden\" name=\"authorId\" value={user.id} />\n\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"title\">Post Title / Main Discount</Label>\n            <Input\n              id=\"title\"\n              name=\"details.title\"\n              placeholder=\"e.g. ₹100 Off, Free Delivery, BOGO\"\n              required\n              value={formData.details.title}\n              onChange={handleInputChange}\n            />\n            <p className=\"text-xs text-muted-foreground\">This helps auto-generate a better title for your post.</p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"restaurant\">Restaurant</Label>\n              <Input\n                id=\"restaurant\"\n                name=\"details.restaurant\"\n                placeholder=\"e.g. Domino's, Zomato, Swiggy\"\n                required\n                value={formData.details.restaurant}\n                onChange={handleInputChange}\n              />\n            </div>\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"deadline\">Order Deadline</Label>\n              <Input\n                id=\"deadline\"\n                name=\"timestamps.deadline\"\n                type=\"datetime-local\"\n                required\n                value={formData.timestamps.deadline}\n                onChange={handleInputChange}\n              />\n            </div>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"totalAmount\">Total Order Amount (₹)</Label>\n              <Input\n                id=\"totalAmount\"\n                name=\"order.totalAmount\"\n                type=\"number\"\n                placeholder=\"e.g. 399\"\n                required\n                min=\"0\"\n                value={formData.order.totalAmount}\n                onChange={handleInputChange}\n              />\n            </div>\n            <div className=\"space-y-2\">\n              <Label>Your Contribution (₹)</Label>\n              <Input\n                id=\"contributionAmount\"\n                name=\"order.contributionAmount\"\n                type=\"number\"\n                placeholder=\"e.g. 199\"\n                required\n                min=\"0\"\n                value={formData.order.contributionAmount}\n                onChange={handleInputChange}\n              />\n            </div>\n          </div>\n\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"notes\">Notes</Label>\n            <Textarea\n              id=\"notes\"\n              name=\"details.notes\"\n              placeholder=\"e.g. Only veg allowed, I'm ordering a Medium Pizza\"\n              value={formData.details.notes}\n              onChange={handleInputChange}\n            />\n            <p className=\"text-xs text-muted-foreground\">\n              Share what you are ordering, any special instructions, or how to coordinate.\n            </p>\n          </div>\n\n          <div className=\"space-y-4\">\n            <Label>Title Preview of your Post</Label>\n            <Card className=\"bg-amber-50 border-amber-200\">\n              <CardContent className=\"p-4 flex items-center gap-4\">\n                <Info className=\"w-6 h-6 text-amber-600 flex-shrink-0\" />\n                <div>\n                  <p className=\"font-semibold text-amber-800\">{generatedTitle}</p>\n                  <p className=\"text-sm text-amber-700\">\n                    This is how your post title will appear on the dashboard.\n                  </p>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n\n          <SubmitButton />\n        </form>\n      </CardContent>\n    </Card>\n    \n    <Dialog open={showSuccessDialog} onOpenChange={handleDialogChange}>\n        <DialogContent className=\"sm:max-w-md bg-white dark:bg-gray-800 rounded-lg shadow-2xl\">\n            <DialogHeader className=\"flex flex-col items-center text-center p-6\">\n                <div className=\"p-3 bg-green-100 dark:bg-green-900/50 rounded-full mb-4\">\n                    <CheckCircle2 className=\"w-10 h-10 text-green-600 dark:text-green-400\" />\n                </div>\n                <DialogTitle className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">Your post is live! 🎉</DialogTitle>\n                <DialogDescription className=\"text-gray-600 dark:text-gray-400 mt-2\">\n                You can view or update it anytime from ‘My Posts’ in your profile\n                </DialogDescription>\n            </DialogHeader>\n            <div className=\"flex justify-around p-6 bg-gray-50 dark:bg-gray-700/50 rounded-b-lg\">\n                <Button variant=\"outline\" className=\"w-full mr-2 border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700\" onClick={() => router.push('/')}>\n                    Go to Dashboard\n                </Button>\n                <Button className=\"w-full ml-2 bg-primary text-primary-foreground hover:bg-primary/90\" onClick={() => router.push('/my-posts')}>\n                    View My Posts\n                </Button>\n            </div>\n        </DialogContent>\n    </Dialog>\n    </>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}