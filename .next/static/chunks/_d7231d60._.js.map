{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/actions.ts"],"sourcesContent":["\n\n\n\n\n// @ts-nocheck\n'use server';\n\nimport { z } from 'zod';\nimport { cookies } from 'next/headers';\nimport { redirect } from 'next/navigation';\nimport { revalidatePath } from 'next/cache';\nimport { FieldValue } from 'firebase-admin/firestore';\n\nimport { createPost, findUserByEmail, updateUser, createUserInDb, getUserById, deletePost, updatePost, getPostById } from '@/lib/data';\nimport { auth as adminAuth, firestore } from 'firebase-admin';\nimport { db } from './firebase-admin';\n\nexport async function verifyAndSignInAction(idToken: string) {\n  console.log('actions: verifyAndSignInAction started.');\n  try {\n    if (!idToken) {\n      return { success: false, message: 'No token provided.' };\n    }\n    const decodedToken = await adminAuth().verifyIdToken(idToken);\n    console.log('actions: ID token verified successfully. Decoded token:', decodedToken);\n\n    const uid = decodedToken.uid;\n    const email = decodedToken.email;\n    const name = decodedToken.name;\n    const photoURL = decodedToken.picture;\n    const gender = decodedToken.gender || 'prefer_not_to_say';\n\n    if (!email || !name) {\n      console.error('actions: Google account missing email or name.');\n      return { success: false, message: 'Google account must have an email and name.' };\n    }\n\n    if (!email.endsWith('@iitdh.ac.in')) {\n      console.error(`actions: Email is not from @iitdh.ac.in domain: ${email}`);\n      return { success: false, message: `Only users with a @iitdh.ac.in email can sign up. Your email is ${email}.` };\n    }\n\n    console.log(`actions: Attempting to find user with email: ${email}`);\n    let user = await findUserByEmail(email);\n    let userId: string;\n\n    if (!user) {\n      console.log('actions: User not found. Creating new user in DB...');\n      const newUser = await createUserInDb({\n        name: name,\n        email: email,\n        photoURL: photoURL,\n        gender: gender\n      });\n      userId = newUser.id;\n      console.log('actions: New user created with ID:', userId);\n    } else {\n      userId = user.id;\n      console.log('actions: Existing user found with ID:', userId);\n    }\n\n    const cookieStore = cookies();\n    cookieStore.set('session_userId', userId, {\n      httpOnly: true,\n      secure: process.env.NODE_ENV === 'production',\n      maxAge: 60 * 60 * 24, // 1 day\n      path: '/',\n    });\n    cookieStore.set('session_authId', uid, {\n      httpOnly: true,\n      secure: process.env.NODE_ENV === 'production',\n      maxAge: 60 * 60 * 24, // 1 day\n      path: '/',\n    });\n\n    revalidatePath('/');\n    console.log('actions: Session cookie set successfully.');\n\n    return { success: true };\n  } catch (error: any) {\n    console.error('actions: Error during token verification:', error);\n    return { success: false, message: `Internal error: ${error.message}` };\n  }\n}\n\n\nexport async function logoutAction() {\n  const cookieStore = cookies();\n  const authId = cookieStore.get('session_authId')?.value;\n  if (authId) {\n    try {\n      await adminAuth().revokeRefreshTokens(authId);\n    } catch (error) {\n      console.error('Error revoking refresh tokens:', error);\n    }\n  }\n  cookieStore.delete('session_userId');\n  cookieStore.delete('session_authId');\n  revalidatePath('/');\n}\n\nconst postSchema = z.object({\n  authorId: z.string(),\n  details: z.object({\n    title: z.string().min(1, 'Title is required.'),\n    restaurant: z.string().min(1, 'Restaurant is required.'),\n    notes: z.string().optional(),\n  }),\n  order: z.object({\n    totalAmount: z.coerce.number().min(0, 'Total amount must be positive.'),\n    contributionAmount: z.coerce.number().min(0, 'Contribution must be positive.'),\n  }),\n  timestamps: z.object({\n    deadline: z.coerce.date(),\n  }),\n});\n\nexport async function createPostAction(prevState: any, formData: FormData) {\n  const authorId = formData.get('authorId') as string;\n  const user = await getUserById(authorId);\n\n  if (!user || !user.userProfile.name || !user.contact.phone || !user.userProfile.gender || user.userProfile.gender === 'prefer_not_to_say') {\n    return { message: 'Please complete your profile (name, contact number, and gender) before posting.' };\n  }\n  \n  const rawData = {\n    authorId,\n    details: {\n      title: formData.get('details.title'),\n      restaurant: formData.get('details.restaurant'),\n      notes: formData.get('details.notes'),\n    },\n    order: {\n      totalAmount: formData.get('order.totalAmount'),\n      contributionAmount: formData.get('order.contributionAmount'),\n    },\n    timestamps: {\n      deadline: formData.get('timestamps.deadline'),\n    },\n  };\n\n  const parsed = postSchema.safeParse(rawData);\n\n  if (!parsed.success) {\n    console.error(parsed.error.flatten().fieldErrors);\n    const firstError = Object.values(parsed.error.flatten().fieldErrors)[0]?.[0];\n    return { message: firstError || 'Invalid post data. Please check your inputs.' };\n  }\n  \n  if (parsed.data.order.contributionAmount > parsed.data.order.totalAmount) {\n    return { message: 'Your contribution cannot be greater than the total order amount.' };\n  }\n\n  // Denormalize user data into the post\n  const postData = {\n    ...parsed.data,\n    authorInfo: {\n      authorName: user.userProfile.name,\n      gender: user.userProfile.gender,\n    },\n    location: {\n      institutionName: user.institution?.institutionName || null,\n      area: user.location?.area || null,\n      city: user.location?.city || null,\n    }\n  };\n\n  await createPost(postData);\n  revalidatePath('/');\n  redirect('/');\n}\n\nconst updatePostSchema = postSchema.omit({ authorId: true }).extend({\n  postId: z.string(),\n});\n\nexport async function updatePostAction(prevState: any, formData: FormData) {\n    const rawData = {\n    postId: formData.get('postId'),\n    details: {\n      title: formData.get('details.title'),\n      restaurant: formData.get('details.restaurant'),\n      notes: formData.get('details.notes'),\n    },\n    order: {\n      totalAmount: formData.get('order.totalAmount'),\n      contributionAmount: formData.get('order.contributionAmount'),\n    },\n    timestamps: {\n      deadline: formData.get('timestamps.deadline'),\n    },\n  };\n  const parsed = updatePostSchema.safeParse(rawData);\n\n  if (!parsed.success) {\n      return { message: 'Invalid post data. Please check your inputs.' };\n  }\n  \n  const post = await getPostById(parsed.data.postId);\n  if (!post) {\n      return { message: 'Post not found.' };\n  }\n\n  if (post.timestamps.updatedAt) {\n      return { message: 'This post has already been updated once and cannot be edited again.' };\n  }\n\n  if (parsed.data.order.contributionAmount > parsed.data.order.totalAmount) {\n      return { message: 'Your contribution cannot be greater than the total order amount.' };\n  }\n\n  await updatePost(parsed.data.postId, parsed.data);\n  revalidatePath('/my-posts');\n  redirect('/my-posts?message=Changes saved successfully. You cannot edit this post again.');\n}\n\nexport async function deletePostAction(postId: string) {\n  await deletePost(postId);\n  revalidatePath('/my-posts');\n}\n\n\nconst profileSchema = z.object({\n  id: z.string(),\n  name: z.string().min(2, 'Name must be at least 2 characters.'),\n  contactNumber: z.string().min(10, 'Contact number must be at least 10 digits.'),\n  shareContact: z.enum(['on', 'off']).transform(val => val === 'on'),\n  gender: z.enum(['male', 'female', 'other', 'prefer_not_to_say']),\n  institutionType: z.enum(['College/University', 'Hostel/PG/Apartment']).optional(),\n  institutionName: z.string().optional(),\n  area: z.string().optional(),\n  city: z.string().optional(),\n  pinCode: z.string().optional(),\n});\n\nexport async function updateProfileAction(prevState: any, formData: FormData) {\n  const parsed = profileSchema.safeParse(Object.fromEntries(formData));\n\n  if (!parsed.success) {\n    return { message: 'Invalid profile data.' };\n  }\n\n  const { id, institutionType, institutionName, area, ...data } = parsed.data;\n\n  const updates: Record<string, any> = {\n    'userProfile.name': data.name,\n    'userProfile.gender': data.gender || null,\n    'userProfile.lastProfileUpdate': new Date().toISOString(),\n    'contact.phone': data.contactNumber || null,\n    'contact.whatsapp': data.contactNumber || null, // Assuming phone and whatsapp are the same\n    'contact.shareContact': data.shareContact,\n    'institution.institutionType': institutionType || null,\n    'institution.institutionName': institutionName || null,\n    'location.area': area || null,\n    'location.city': data.city || null,\n    'location.pinCode': data.pinCode || null,\n    'institution.hostelOrPG': null, // Explicitly remove this field\n  };\n\n  await updateUser(id, updates);\n\n  revalidatePath('/profile');\n  revalidatePath('/');\n  return { message: 'Profile updated successfully!' };\n}\n\nexport async function subscribeAction(plan: 'single-post' | 'daily' | 'weekly' | 'monthly', userId: string) {\n  try {\n    const updates: Record<string, any> = {\n      'subscription.status': 'active',\n      'subscription.plan': plan,\n      'subscription.startDate': new Date().toISOString(),\n      'subscription.postsViewed': 0, // Reset view count on new subscription\n    };\n\n    if (plan === 'single-post') {\n      updates['subscription.expiry'] = null;\n    } else {\n      let expiryDate = new Date();\n      if (plan === 'daily') expiryDate.setDate(expiryDate.getDate() + 1);\n      if (plan === 'weekly') expiryDate.setDate(expiryDate.getDate() + 7);\n      if (plan === 'monthly') expiryDate.setDate(expiryDate.getDate() + 30);\n      updates['subscription.expiry'] = expiryDate.toISOString();\n    }\n\n    await updateUser(userId, updates);\n\n    revalidatePath('/pricing');\n    revalidatePath('/');\n    revalidatePath('/profile');\n    \n    return { success: true };\n  } catch (error) {\n    console.error('Subscription action failed:', error);\n    return { success: false, message: 'Could not update subscription.' };\n  }\n}\n\n\nexport async function deactivateSinglePostPassAction(userId: string) {\n  try {\n    await updateUser(userId, {\n      'subscription.status': 'inactive',\n    });\n    revalidatePath('/');\n    revalidatePath('/profile');\n    return { success: true };\n  } catch (error) {\n    console.error('deactivateSinglePostPassAction failed:', error);\n    return { success: false };\n  }\n}\n\nexport async function updatePostViewCountAction(userId: string, count: number) {\n  if (!userId || count <= 0) {\n    return;\n  }\n  try {\n    await db.collection('users').doc(userId).update({\n      'subscription.postsViewed': FieldValue.increment(count),\n    });\n  } catch (error) {\n    console.error('Failed to update post view count:', error);\n  }\n}\n\n\nconst feedbackSchema = z.object({\n  email: z.string().email().optional().or(z.literal('')),\n  feedback: z.string().min(10, 'Feedback must be at least 10 characters.'),\n});\n\nexport async function submitFeedbackAction(prevState: any, formData: FormData) {\n  try {\n    const data = Object.fromEntries(formData);\n    const parsed = feedbackSchema.safeParse(data);\n\n    if (!parsed.success) {\n      const firstError = Object.values(parsed.error.flatten().fieldErrors)[0]?.[0];\n      return { success: false, message: firstError || 'Invalid data.' };\n    }\n\n    const feedbackData = {\n      email: parsed.data.email || null,\n      feedback: parsed.data.feedback,\n      createdAt: new Date(),\n    };\n\n    await db.collection('feedback').add(feedbackData);\n\n    return { success: true, message: 'Thank you for your feedback!' };\n  } catch (error) {\n    return { success: false, message: 'Something went wrong. Please try again.' };\n  }\n}\n    "],"names":[],"mappings":";;;;;;IAsHsB,mBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 59, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 98, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 133, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 236, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/create-post-form.tsx"],"sourcesContent":["\n'use client';\nimport { useActionState, useEffect, useState } from 'react';\nimport { useFormStatus } from 'react-dom';\nimport { createPostAction } from '@/lib/actions';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Textarea } from '@/components/ui/textarea';\nimport { User, Post } from '@/lib/types';\nimport { useToast } from '@/hooks/use-toast';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from './ui/card';\nimport { Info } from 'lucide-react';\nimport { generateCatchyTitle } from '@/lib/utils';\n\nfunction SubmitButton() {\n  const { pending } = useFormStatus();\n  return (\n    <Button type=\"submit\" disabled={pending} className=\"w-full\">\n      {pending ? 'Creating Post...' : 'Create Post'}\n    </Button>\n  );\n}\n\nexport function CreatePostForm({ user }: { user: User }) {\n  const [state, formAction] = useActionState(createPostAction, null);\n  const { toast } = useToast();\n\n  const [formData, setFormData] = useState({\n    details: {\n      title: '',\n      restaurant: '',\n      notes: ''\n    },\n    order: {\n      totalAmount: '',\n      contributionAmount: '',\n    },\n    timestamps: {\n      deadline: '',\n    }\n  });\n\n  const [generatedTitle, setGeneratedTitle] = useState('Group order');\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const { name, value } = e.target;\n    const [section, field] = name.split('.');\n\n    setFormData(prev => ({\n      ...prev,\n      [section]: {\n        // @ts-ignore\n        ...prev[section],\n        [field]: value\n      }\n    }));\n  };\n\n  useEffect(() => {\n    if (state?.message) {\n      toast({\n        title: state.message.includes('success') ? 'Success' : 'Error',\n        description: state.message,\n        variant: state.message.includes('success') ? 'default' : 'destructive',\n      });\n    }\n  }, [state, toast]);\n\n  useEffect(() => {\n    const deadlineStr = formData.timestamps.deadline;\n    let formattedDeadline = '';\n\n    if (deadlineStr) {\n      const date = new Date(deadlineStr);\n\n      const datePart = date.toLocaleDateString('en-US', {\n        month: 'long',\n        day: 'numeric',\n        year: 'numeric',\n      });\n\n      const timePart = date.toLocaleTimeString('en-US', {\n        hour: 'numeric',\n        minute: '2-digit',\n        second: '2-digit',\n        hour12: true,\n      });\n\n      const offset = date.getTimezoneOffset();\n      const offsetHours = Math.floor(Math.abs(offset) / 60);\n      const offsetMinutes = Math.abs(offset) % 60;\n      const sign = offset <= 0 ? '+' : '-';\n      const timezonePart = `UTC${sign}${offsetHours}:${String(offsetMinutes).padStart(2, '0')}`;\n\n      formattedDeadline = `${datePart} at ${timePart} ${timezonePart}`;\n    }\n\n    const partialPost: Partial<Post> = {\n      details: formData.details,\n      order: {\n        totalAmount: parseFloat(formData.order.totalAmount) || 0,\n        contributionAmount: parseFloat(formData.order.contributionAmount) || 0,\n      },\n      timestamps: {\n        deadline: formattedDeadline\n      }\n    };\n    setGeneratedTitle(generateCatchyTitle(partialPost));\n  }, [\n    formData.details.title,\n    formData.details.restaurant,\n    formData.details.notes,\n    formData.order.totalAmount,\n    formData.order.contributionAmount,\n    formData.timestamps.deadline\n  ]);\n\n  return (\n    <Card className=\"w-full max-w-2xl mx-auto border-2 border-teal-100 shadow-lg\">\n      <CardHeader className=\"text-center bg-teal-50 rounded-t-lg p-6\">\n        <CardTitle className=\"text-3xl font-headline text-teal-800\">🎉 Create a New Order Post</CardTitle>\n        <CardDescription className=\"text-teal-600\">Let others in your building know you're ordering.</CardDescription>\n      </CardHeader>\n      <CardContent className=\"p-8\">\n        <form action={formAction} className=\"space-y-6\">\n          <input type=\"hidden\" name=\"authorId\" value={user.id} />\n\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"title\">Post Title / Main Discount</Label>\n            <Input\n              id=\"title\"\n              name=\"details.title\"\n              placeholder=\"e.g. ₹100 Off, Free Delivery, BOGO\"\n              required\n              value={formData.details.title}\n              onChange={handleInputChange}\n            />\n            <p className=\"text-xs text-muted-foreground\">This helps auto-generate a better title for your post.</p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"restaurant\">Restaurant</Label>\n              <Input\n                id=\"restaurant\"\n                name=\"details.restaurant\"\n                placeholder=\"e.g. Domino's, Zomato, Swiggy\"\n                required\n                value={formData.details.restaurant}\n                onChange={handleInputChange}\n              />\n            </div>\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"deadline\">Order Deadline</Label>\n              <Input\n                id=\"deadline\"\n                name=\"timestamps.deadline\"\n                type=\"datetime-local\"\n                required\n                value={formData.timestamps.deadline}\n                onChange={handleInputChange}\n              />\n            </div>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"totalAmount\">Total Order Amount (₹)</Label>\n              <Input\n                id=\"totalAmount\"\n                name=\"order.totalAmount\"\n                type=\"number\"\n                placeholder=\"e.g. 399\"\n                required\n                min=\"0\"\n                value={formData.order.totalAmount}\n                onChange={handleInputChange}\n              />\n            </div>\n            <div className=\"space-y-2\">\n              <Label>Your Contribution (₹)</Label>\n              <Input\n                id=\"contributionAmount\"\n                name=\"order.contributionAmount\"\n                type=\"number\"\n                placeholder=\"e.g. 250\"\n                required\n                min=\"0\"\n                value={formData.order.contributionAmount}\n                onChange={handleInputChange}\n              />\n            </div>\n          </div>\n\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"notes\">Notes</Label>\n            <Textarea\n              id=\"notes\"\n              name=\"details.notes\"\n              placeholder=\"e.g. Only veg allowed, I'm ordering a Medium Pizza\"\n              value={formData.details.notes}\n              onChange={handleInputChange}\n            />\n            <p className=\"text-xs text-muted-foreground\">\n              Share what you are ordering, any special instructions, or how to coordinate.\n            </p>\n          </div>\n\n          <div className=\"space-y-4\">\n            <Label>Title Preview of your Post</Label>\n            <Card className=\"bg-amber-50 border-amber-200\">\n              <CardContent className=\"p-4 flex items-center gap-4\">\n                <Info className=\"w-6 h-6 text-amber-600 flex-shrink-0\" />\n                <div>\n                  <p className=\"font-semibold text-amber-800\">{generatedTitle}</p>\n                  <p className=\"text-sm text-amber-700\">\n                    This is how your post title will appear on the dashboard.\n                  </p>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n\n          <SubmitButton />\n        </form>\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 732, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/%40radix-ui/react-label/src/label.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Primitive } from '@radix-ui/react-primitive';\n\n/* -------------------------------------------------------------------------------------------------\n * Label\n * -----------------------------------------------------------------------------------------------*/\n\nconst NAME = 'Label';\n\ntype LabelElement = React.ElementRef<typeof Primitive.label>;\ntype PrimitiveLabelProps = React.ComponentPropsWithoutRef<typeof Primitive.label>;\ninterface LabelProps extends PrimitiveLabelProps {}\n\nconst Label = React.forwardRef<LabelElement, LabelProps>((props, forwardedRef) => {\n  return (\n    <Primitive.label\n      {...props}\n      ref={forwardedRef}\n      onMouseDown={(event) => {\n        // only prevent text selection if clicking inside the label itself\n        const target = event.target as HTMLElement;\n        if (target.closest('button, input, select, textarea')) return;\n\n        props.onMouseDown?.(event);\n        // prevent text selection when double clicking label\n        if (!event.defaultPrevented && event.detail > 1) event.preventDefault();\n      }}\n    />\n  );\n});\n\nLabel.displayName = NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = Label;\n\nexport {\n  Label,\n  //\n  Root,\n};\nexport type { LabelProps };\n"],"names":[],"mappings":";;;;;AAAA,YAAY,WAAW;AACvB,SAAS,iBAAiB;AActB;;;;;AARJ,IAAM,OAAO;AAMb,IAAM,0KAAc,aAAA,EAAqC,CAAC,OAAO,iBAAiB;IAChF,OACE,aAAA,GAAA,CAAA,GAAA,sKAAA,CAAA,MAAA,2KAAC,YAAA,CAAU,KAAA,EAAV;QACE,GAAG,KAAA;QACJ,KAAK;QACL,aAAa,CAAC,UAAU;YAEtB,MAAM,SAAS,MAAM,MAAA;YACrB,IAAI,OAAO,OAAA,CAAQ,iCAAiC,EAAG,CAAA;YAEvD,MAAM,WAAA,GAAc,KAAK;YAEzB,IAAI,CAAC,MAAM,gBAAA,IAAoB,MAAM,MAAA,GAAS,EAAG,CAAA,MAAM,cAAA,CAAe;QACxE;IAAA;AAGN,CAAC;AAED,MAAM,WAAA,GAAc;AAIpB,IAAM,OAAO","ignoreList":[0],"debugId":null}}]
}