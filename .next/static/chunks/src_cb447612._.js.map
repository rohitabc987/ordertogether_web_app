{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,6LAAC;QAAI,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE;KAJS","debugId":null}},
    {"offset": {"line": 158, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/alert-dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 310, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/actions.ts"],"sourcesContent":["\n\n\n'use server';\n\nimport { revalidatePath } from 'next/cache';\nimport { Post, User } from './types';\nimport {FieldValue,Timestamp,} from 'firebase-admin/firestore';\nimport { db as adminDb, auth as adminAuth } from './firebase-admin';\nimport { cookies } from 'next/headers';\nimport { findUserByEmail, createUserInDb, getAuthorAndInstitution } from './data';\n\nfunction convertFirestoreTimestampToDate(timestamp: any): Date | null {\n  if (!timestamp) {\n    return null;\n  }\n  if (typeof timestamp.seconds === 'number' && typeof timestamp.nanoseconds === 'number') {\n    return new Date(timestamp.seconds * 1000 + timestamp.nanoseconds / 1000000);\n  }\n  const date = new Date(timestamp);\n  if (!isNaN(date.getTime())) {\n    return date;\n  }\n  return null;\n}\n\nexport async function createPostAction(prevState: any, formData: FormData) {\n  const authorId = formData.get('authorId') as string;\n\n  try {\n    const authorResult = await getAuthorAndInstitution(authorId);\n    if (!authorResult) {\n      return { message: 'Error: Could not find author or institution.' };\n    }\n\n    const { authorData } = authorResult;\n\n    const deadlineStr = formData.get('timestamps.deadline') as string;\n    const deadline = Timestamp.fromDate(new Date(deadlineStr));\n\n    const newPost: Omit<Post, 'id' | 'author'> = {\n      authorId,\n      authorInfo: {\n        authorName: authorData.userProfile.name,\n        gender: authorData.userProfile.gender || 'prefer_not_to_say',\n      },\n      details: {\n        title: formData.get('details.title') as string,\n        restaurant: formData.get('details.restaurant') as string,\n        notes: formData.get('details.notes') as string,\n      },\n      order: {\n        totalAmount: parseFloat(formData.get('order.totalAmount') as string),\n        contributionAmount: parseFloat(formData.get('order.contributionAmount') as string),\n      },\n      timestamps: {\n        createdAt: FieldValue.serverTimestamp() as any,\n        updatedAt: FieldValue.serverTimestamp() as any,\n        deadline: deadline as any,\n      },\n      location: {\n        institutionName: authorData.institution?.institutionName ?? undefined,\n        area: authorData.location?.area ?? undefined,\n        city: authorData.location?.city ?? undefined,\n      },\n    };\n\n    await adminDb.collection('posts').add(newPost);\n    \n    revalidatePath('/');\n    revalidatePath('/my-posts');\n\n    return { message: 'Post created successfully!' };\n\n  } catch (error) {\n    console.error('Error creating post:', error);\n    return { message: `Error creating post: ${error instanceof Error ? error.message : 'Unknown error'}` };\n  }\n}\n\nexport async function deletePostAction(postId: string) {\n    try {\n        await adminDb.collection('posts').doc(postId).delete();\n        revalidatePath('/my-posts');\n        return { success: true, message: 'Post deleted successfully.' };\n    } catch (error) {\n        console.error('Error deleting post:', error);\n        return { success: false, message: 'Failed to delete post.' };\n    }\n}\n\nexport async function updatePostAction(prevState: any, formData: FormData) {\n    const postId = formData.get('postId') as string;\n    if (!postId) {\n        return { message: 'Error: Post ID is missing.' };\n    }\n\n    try {\n        const deadlineStr = formData.get('timestamps.deadline') as string;\n        const deadline = Timestamp.fromDate(new Date(deadlineStr));\n\n        const updates = {\n            'details.title': formData.get('details.title') as string,\n            'details.restaurant': formData.get('details.restaurant') as string,\n            'details.notes': formData.get('details.notes') as string,\n            'order.totalAmount': parseFloat(formData.get('order.totalAmount') as string),\n            'order.contributionAmount': parseFloat(formData.get('order.contributionAmount') as string),\n            'timestamps.deadline': deadline,\n            'timestamps.updatedAt': FieldValue.serverTimestamp(),\n        };\n\n        await adminDb.collection('posts').doc(postId).update(updates);\n\n        revalidatePath('/');\n        revalidatePath('/my-posts');\n        revalidatePath(`/edit-post/${postId}`);\n\n        return { message: 'Post updated successfully!' };\n    } catch (error) {\n        console.error(`Error updating post ${postId}:`, error);\n        return { message: `Error updating post: ${error instanceof Error ? error.message : 'Unknown error'}` };\n    }\n}\n\n\nexport async function updateProfileAction(prevState: any, formData: FormData) {\n    const userId = formData.get('id') as string;\n    if (!userId) {\n        return { message: 'Error: User ID is missing.' };\n    }\n\n    const oneWeek = 7 * 24 * 60 * 60 * 1000;\n\n    try {\n        const userRef = adminDb.collection('users').doc(userId);\n        const userDoc = await userRef.get();\n        if (!userDoc.exists) {\n            return { message: 'Error: User not found.' };\n        }\n        \n        const userData = userDoc.data() as User;\n        const lastUpdateStr = userData.userProfile?.lastProfileUpdate;\n        \n        if (lastUpdateStr) {\n            const lastUpdate = new Date(lastUpdateStr);\n            if ((new Date().getTime() - lastUpdate.getTime()) < oneWeek) {\n                 return { message: 'Profile can only be updated once a week.' };\n            }\n        }\n        \n        const updates: Record<string, any> = {\n            'userProfile.name': formData.get('name'),\n            'userProfile.lastProfileUpdate': FieldValue.serverTimestamp(),\n            'contact.phone': formData.get('contactNumber'),\n            'contact.shareContact': formData.get('shareContact') === 'on',\n            'institution.institutionType': formData.get('institutionType'),\n            'institution.institutionName': formData.get('institutionName'),\n            'location.area': formData.get('area'),\n            'location.city': formData.get('city'),\n            'location.pinCode': formData.get('pinCode'),\n        };\n\n        await userRef.update(updates);\n        \n        revalidatePath('/profile');\n        revalidatePath('/');\n\n        return { message: 'Profile updated successfully!' };\n    } catch (error) {\n        console.error('Error updating profile:', error);\n        return { message: `Error updating profile: ${error instanceof Error ? error.message : 'Unknown error'}` };\n    }\n}\n\n\nexport async function deactivateSinglePostPassAction(userId: string) {\n  try {\n    const userRef = adminDb.collection('users').doc(userId);\n    const userDoc = await userRef.get();\n\n    if (!userDoc.exists) {\n      return { success: false, message: 'User not found.' };\n    }\n\n    const user = userDoc.data() as User;\n\n    if (user.subscription?.plan === 'single-post' && user.subscription?.status === 'active') {\n      await userRef.update({\n        'subscription.status': 'inactive',\n        'subscription.postsViewed': 1, \n      });\n\n      revalidatePath('/'); \n\n      return { success: true, message: 'Single-post pass used and deactivated.' };\n    } else {\n      return { success: false, message: 'No active single-post pass to deactivate.' };\n    }\n  } catch (error) {\n    console.error('Error deactivating single-post pass:', error);\n    return { success: false, message: 'An unexpected error occurred.' };\n  }\n}\n\n\nexport async function verifyAndSignInAction(idToken: string) {\n  try {\n    const decodedToken = await adminAuth.verifyIdToken(idToken);\n    const uid = decodedToken.uid;\n    const email = decodedToken.email;\n\n    if (!email) {\n      return { success: false, message: 'Email not found in token.' };\n    }\n\n    let user = await findUserByEmail(email);\n\n    if (!user) {\n      const newUser = {\n        name: decodedToken.name || 'New User',\n        email: email,\n        photoURL: decodedToken.picture || null,\n      };\n      user = await createUserInDb(newUser);\n    }\n    \n    const cookieStore = await cookies();\n    cookieStore.set('session_userId', user.id, { httpOnly: true, secure: process.env.NODE_ENV === 'production' });\n\n    return { success: true, user };\n  } catch (error: any) {\n    return { success: false, message: error.message || 'Authentication failed.' };\n  }\n}\n\nexport async function logoutAction() {\n    const cookieStore = await cookies();\n    cookieStore.delete('session_userId');\n}\n\n\nexport async function subscribeAction(planId: 'single-post' | 'daily' | 'weekly' | 'monthly', userId: string) {\n  if (!userId) {\n    return { success: false, message: 'User not found.' };\n  }\n\n  try {\n    const userRef = adminDb.collection('users').doc(userId);\n\n    const now = new Date();\n    let expiry = new Date(now);\n\n    switch (planId) {\n      case 'daily':\n        expiry.setDate(now.getDate() + 1);\n        break;\n      case 'weekly':\n        expiry.setDate(now.getDate() + 7);\n        break;\n      case 'monthly':\n        expiry.setMonth(now.getMonth() + 1);\n        break;\n      case 'single-post':\n        expiry.setFullYear(now.getFullYear() + 1);\n        break;\n    }\n    \n    const subscriptionData: User['subscription'] = {\n      status: 'active',\n      plan: planId,\n      startDate: Timestamp.fromDate(now) as any,\n      expiry: Timestamp.fromDate(expiry) as any,\n      postsViewed: 0,\n    };\n    \n    await userRef.update({\n        'subscription': subscriptionData\n    });\n\n    revalidatePath('/pricing');\n    revalidatePath('/profile');\n    revalidatePath('/');\n\n    return { success: true };\n  } catch (error: any) {\n    console.error('Subscription Error:', error);\n    return { success: false, message: error.message || 'An unexpected error occurred.' };\n  }\n}\n\nexport async function submitFeedbackAction(prevState: any, formData: FormData) {\n    const email = formData.get('email') as string;\n    const feedback = formData.get('feedback') as string;\n\n    if (!feedback) {\n        return { success: false, message: 'Feedback cannot be empty.' };\n    }\n\n    try {\n        await adminDb.collection('feedback').add({\n            email: email || 'anonymous',\n            feedback: feedback,\n            submittedAt: FieldValue.serverTimestamp(),\n        });\n        return { success: true, message: 'Your feedback has been submitted.' };\n    } catch (error) {\n        console.error('Feedback submission error:', error);\n        return { success: false, message: 'Something went wrong. Please try again.' };\n    }\n}\n\nexport async function updatePostViewCountAction(userId: string, count: number) {\n    if (!userId || count === 0) return;\n\n    const userRef = adminDb.collection('users').doc(userId);\n\n    try {\n        const userDoc = await userRef.get();\n        if (userDoc.exists) {\n            const currentCount = userDoc.data()?.subscription?.postsViewed || 0;\n            await userRef.update({\n                'subscription.postsViewed': currentCount + count\n            });\n        }\n    } catch (error) {\n        console.error(`Failed to update view count for user ${userId}:`, error);\n    }\n}\n"],"names":[],"mappings":";;;;;;IAgFsB,mBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 326, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/progress.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-tertiary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG9B,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,GAAG,OAAO,EAAE,oBACjC,6LAAC,uKAAA,CAAA,OAAsB;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,gEACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,uKAAA,CAAA,YAA2B;YAC1B,WAAU;YACV,OAAO;gBAAE,WAAW,CAAC,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC;YAAC;;;;;;;;;;;;AAIhE,SAAS,WAAW,GAAG,uKAAA,CAAA,OAAsB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 372, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/my-post-card.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState } from 'react';\nimport Link from 'next/link';\nimport { Card, CardContent, CardFooter, CardHeader, CardTitle, CardDescription } from './ui/card';\nimport { Button } from './ui/button';\nimport { Badge } from './ui/badge';\nimport { Clock, Edit, Trash2, Info } from 'lucide-react';\nimport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n  AlertDialogTrigger,\n} from '@/components/ui/alert-dialog';\nimport { formatDistanceToNow, differenceInMinutes } from 'date-fns';\nimport { formatCurrency } from '@/lib/utils';\nimport type { Post } from '@/lib/types';\nimport { deletePostAction } from '@/lib/actions';\nimport { Progress } from './ui/progress';\n\nfunction convertFirestoreTimestampToDate(timestamp: any): Date | null {\n  if (!timestamp) {\n    return null;\n  }\n  // Firestore timestamps are serialized to objects with seconds and nanoseconds\n  // when passed from server to client components.\n  if (typeof timestamp.seconds === 'number' && typeof timestamp.nanoseconds === 'number') {\n    return new Date(timestamp.seconds * 1000 + timestamp.nanoseconds / 1000000);\n  }\n  // Fallback for cases where it might be a string (e.g., from `new Date().toISOString()`)\n  const date = new Date(timestamp);\n  if (!isNaN(date.getTime())) {\n    return date;\n  }\n  return null;\n}\n\nexport function MyPostCard({ post }: { post: Post }) {\n  const [isDeleting, setIsDeleting] = useState(false);\n\n  const deadline = convertFirestoreTimestampToDate(post.timestamps?.deadline);\n  const deadlineInPast = deadline ? deadline < new Date() : true;\n  \n  // A post is considered edited only if updatedAt exists and is more than\n  // 2 seconds after createdAt to account for creation time.\n  const createdAt = convertFirestoreTimestampToDate(post.timestamps?.createdAt);\n  const updatedAt = convertFirestoreTimestampToDate(post.timestamps?.updatedAt);\n  const hasBeenEdited = createdAt && updatedAt && (updatedAt.getTime() - createdAt.getTime() > 2000);\n\n  const remainingNeeded = post.order.totalAmount - post.order.contributionAmount;\n  const progressPercentage = (post.order.contributionAmount / post.order.totalAmount) * 100;\n\n  const handleDelete = async () => {\n    setIsDeleting(true);\n    await deletePostAction(post.id);\n  };\n\n  const getDeadlineText = () => {\n    if (!deadline) return 'N/A';\n    const now = new Date();\n    const minutesLeft = differenceInMinutes(deadline, now);\n\n    if (minutesLeft <= 0) {\n      return formatDistanceToNow(deadline, { addSuffix: true });\n    }\n    if (minutesLeft < 60) {\n      return `in ${minutesLeft} min`;\n    }\n    if (minutesLeft < 6 * 60) {\n      const hours = Math.floor(minutesLeft / 60);\n      const minutes = minutesLeft % 60;\n      return `in ${hours}hr ${minutes}min`;\n    }\n    return formatDistanceToNow(deadline, { addSuffix: true });\n  };\n  \n  return (\n    <Card className=\"flex flex-col\">\n      <CardHeader>\n        <CardTitle>{post.details.title}</CardTitle>\n        <CardDescription>From: {post.details.restaurant}</CardDescription>\n      </CardHeader>\n      <CardContent className=\"flex-grow space-y-4\">\n        <div className=\"space-y-2\">\n            <div className=\"flex justify-between items-center text-xs text-muted-foreground\">\n                <span>{formatCurrency(post.order.contributionAmount)} contributed</span>\n                <span>{formatCurrency(post.order.totalAmount)} total</span>\n            </div>\n            <Progress value={progressPercentage} className=\"h-2\" />\n            <p className=\"text-sm font-medium text-primary text-center\">\n              {formatCurrency(remainingNeeded)} needed to complete the order.\n            </p>\n        </div>\n        \n        <div className=\"flex items-center text-sm text-muted-foreground\">\n          <Clock className=\"mr-2 h-4 w-4\" />\n          <span>Deadline: {getDeadlineText()}</span>\n        </div>\n        \n        {post.details.notes && <p className=\"text-sm border-l-2 border-accent pl-3 py-1 bg-background rounded-r-md\">{post.details.notes}</p>}\n\n        {hasBeenEdited && (\n           <Badge variant=\"outline\" className=\"flex items-center gap-2\">\n              <Info className=\"w-3 h-3\"/>\n              Posts can be edited only once\n            </Badge>\n        )}\n\n      </CardContent>\n      <CardFooter className=\"flex justify-end gap-2\">\n        <Button\n          asChild\n          variant=\"outline\"\n          size=\"sm\"\n          disabled={hasBeenEdited || deadlineInPast}\n          className={(hasBeenEdited || deadlineInPast) ? 'opacity-50 cursor-not-allowed' : ''}\n        >\n          <Link href={`/edit-post/${post.id}`} onClick={(e) => (hasBeenEdited || deadlineInPast) && e.preventDefault()}>\n            <Edit />\n            Edit\n          </Link>\n        </Button>\n        <AlertDialog>\n          <AlertDialogTrigger asChild>\n            <Button variant=\"destructive\" size=\"sm\" disabled={isDeleting}>\n              <Trash2 />\n              {isDeleting ? 'Deleting...' : 'Delete'}\n            </Button>\n          </AlertDialogTrigger>\n          <AlertDialogContent>\n            <AlertDialogHeader>\n              <AlertDialogTitle>Are you sure?</AlertDialogTitle>\n              <AlertDialogDescription>\n                This action cannot be undone. This will permanently delete your post.\n              </AlertDialogDescription>\n            </AlertDialogHeader>\n            <AlertDialogFooter>\n              <AlertDialogCancel>Cancel</AlertDialogCancel>\n              <AlertDialogAction onClick={handleDelete}>Continue</AlertDialogAction>\n            </AlertDialogFooter>\n          </AlertDialogContent>\n        </AlertDialog>\n      </CardFooter>\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}