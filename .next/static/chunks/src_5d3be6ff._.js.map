{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/actions.ts"],"sourcesContent":["// @ts-nocheck\n'use server';\n\nimport { z } from 'zod';\nimport { cookies } from 'next/headers';\nimport { redirect } from 'next/navigation';\nimport { revalidatePath } from 'next/cache';\n\nimport { createPost, findUserByEmail, updateUser, createUserInDb, getUserById } from '@/lib/data';\nimport { filterRestaurants } from '@/ai/flows/restaurant-filtering';\nimport { auth as adminAuth } from 'firebase-admin';\nimport { db } from './firebase-admin';\n\nexport async function verifyAndSignInAction(idToken: string) {\n  console.log('actions: verifyAndSignInAction started.');\n  try {\n    if (!idToken) {\n      return { success: false, message: 'No token provided.' };\n    }\n    const decodedToken = await adminAuth().verifyIdToken(idToken);\n    console.log('actions: ID token verified successfully. Decoded token:', decodedToken);\n\n    const uid = decodedToken.uid;\n    const email = decodedToken.email;\n    const name = decodedToken.name;\n    const photoURL = decodedToken.picture;\n    const gender = decodedToken.gender || 'prefer_not_to_say';\n\n    if (!email || !name) {\n      console.error('actions: Google account missing email or name.');\n      return { success: false, message: 'Google account must have an email and name.' };\n    }\n\n    if (!email.endsWith('@iitdh.ac.in')) {\n      console.error(`actions: Email is not from @iitdh.ac.in domain: ${email}`);\n      return { success: false, message: `Only users with a @iitdh.ac.in email can sign up. Your email is ${email}.` };\n    }\n\n    console.log(`actions: Attempting to find user with email: ${email}`);\n    let user = await findUserByEmail(email);\n    let userId: string;\n\n    if (!user) {\n      console.log('actions: User not found. Creating new user in DB...');\n      const newUser = await createUserInDb({\n        name: name,\n        email: email,\n        photoURL: photoURL,\n        gender: gender\n      });\n      userId = newUser.id;\n      console.log('actions: New user created with ID:', userId);\n    } else {\n      userId = user.id;\n      console.log('actions: Existing user found with ID:', userId);\n    }\n\n    const cookieStore = cookies();\n    cookieStore.set('session_userId', userId, {\n      httpOnly: true,\n      secure: process.env.NODE_ENV === 'production',\n      maxAge: 60 * 60 * 24, // 1 day\n      path: '/',\n    });\n    cookieStore.set('session_authId', uid, {\n      httpOnly: true,\n      secure: process.env.NODE_ENV === 'production',\n      maxAge: 60 * 60 * 24, // 1 day\n      path: '/',\n    });\n\n    revalidatePath('/');\n    console.log('actions: Session cookie set successfully.');\n\n    return { success: true };\n  } catch (error: any) {\n    console.error('actions: Error during token verification:', error);\n    return { success: false, message: `Internal error: ${error.message}` };\n  }\n}\n\n\nexport async function logoutAction() {\n  const cookieStore = cookies();\n  const authId = cookieStore.get('session_authId')?.value;\n  if (authId) {\n    try {\n      await adminAuth().revokeRefreshTokens(authId);\n    } catch (error) {\n      console.error('Error revoking refresh tokens:', error);\n    }\n  }\n  cookieStore.delete('session_userId');\n  cookieStore.delete('session_authId');\n  redirect('/login');\n}\n\nconst postSchema = z.object({\n  restaurant: z.string().min(1, 'Restaurant is required.'),\n  minAmount: z.coerce.number().min(0),\n  maxAmount: z.coerce.number().min(0),\n  deadline: z.coerce.date(),\n  notes: z.string().optional(),\n  authorId: z.string(),\n  authorName: z.string(),\n  contact: z.object({\n    phone: z.string(),\n  }),\n  location: z.object({\n    hostel: z.string(),\n    society: z.string(),\n  }),\n});\n\nexport async function createPostAction(prevState: any, formData: FormData) {\n  const rawData = {\n    ...Object.fromEntries(formData),\n    contact: JSON.parse(formData.get('contact') as string),\n    location: JSON.parse(formData.get('location') as string),\n  };\n  \n  const parsed = postSchema.safeParse(rawData);\n\n  if (!parsed.success) {\n    console.error(parsed.error.flatten().fieldErrors);\n    return { message: 'Invalid post data. Please check your inputs.' };\n  }\n  \n  if (parsed.data.minAmount > parsed.data.maxAmount) {\n    return { message: 'Minimum amount cannot be greater than maximum amount.' };\n  }\n\n  await createPost(parsed.data);\n  revalidatePath('/');\n  redirect('/');\n}\n\nconst profileSchema = z.object({\n  id: z.string(),\n  name: z.string().min(2, 'Name must be at least 2 characters.'),\n  phone: z.string().min(10, 'Please enter a valid phone number.'),\n  gender: z.enum(['male', 'female', 'other', 'prefer_not_to_say']).optional(),\n  hostel: z.string().min(1, 'Hostel/PG name is required.'),\n  society: z.string().min(1, 'Society/Area name is required.'),\n});\n\nexport async function updateProfileAction(prevState: any, formData: FormData) {\n  const parsed = profileSchema.safeParse(Object.fromEntries(formData));\n\n  if (!parsed.success) {\n    return { message: 'Invalid profile data.' };\n  }\n\n  await updateUser(parsed.data.id, {\n    name: parsed.data.name,\n    gender: parsed.data.gender,\n    contact: { phone: parsed.data.phone },\n    location: { hostel: parsed.data.hostel, society: parsed.data.society },\n  });\n\n  revalidatePath('/profile');\n  revalidatePath('/');\n  return { message: 'Profile updated successfully!' };\n}\n\nexport async function subscribeAction(plan: 'daily' | 'weekly' | 'monthly', userId: string) {\n  let expiryDays = 0;\n  if (plan === 'daily') expiryDays = 1;\n  if (plan === 'weekly') expiryDays = 7;\n  if (plan === 'monthly') expiryDays = 30;\n\n  const expiryDate = new Date();\n  expiryDate.setDate(expiryDate.getDate() + expiryDays);\n\n  await updateUser(userId, {\n    subscription: {\n      status: 'active',\n      plan: plan,\n      expiry: expiryDate.toISOString(),\n    },\n  });\n\n  revalidatePath('/pricing');\n  revalidatePath('/');\n  revalidatePath('/profile');\n}\n\nexport async function getRestaurantSuggestions(location: string) {\n  try {\n    const result = await filterRestaurants({\n      location,\n      pastOrders: \"Pizza, Burgers\", // Mock data\n      currentTrends: \"Italian, Fast Food\", // Mock data\n    });\n    return result.suggestedRestaurants;\n  } catch (error) {\n    console.error(\"AI suggestion failed:\", error);\n    return [];\n  }\n}\n"],"names":[],"mappings":";;;;;;IAasB,wBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 126, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/firebase.ts"],"sourcesContent":["// @ts-nocheck\nimport { initializeApp, getApps, getApp } from 'firebase/app';\nimport { getAuth } from 'firebase/auth';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyA00F2LyzvMPYTLN4SLjZ0aOPky8CcDyLA\",\n  authDomain: \"studio-5219136729-6683e.firebaseapp.com\",\n  projectId: \"studio-5219136729-6683e\",\n  storageBucket: \"studio-5219136729-6683e.appspot.com\",\n  messagingSenderId: \"183055801352\",\n  appId: \"1:183055801352:web:495772bc4e16491fe6c5bd\"\n};\n\n// We export a function that returns the auth instance.\n// Components will call this, ensuring it only runs on the client.\nexport function auth() {\n  if (typeof window === 'undefined') {\n    // On the server, return null.\n    // Auth is only needed on the client for the sign-in flow.\n    return null;\n  }\n  \n  let app;\n  if (!getApps().length) {\n    app = initializeApp(firebaseConfig);\n  } else {\n    app = getApp();\n  }\n  return getAuth(app);\n}\n"],"names":[],"mappings":"AAAA,cAAc;;;;AACd;AAAA;AACA;AAAA;;;AAEA,MAAM,iBAAiB;IACrB,QAAQ;IACR,YAAY;IACZ,WAAW;IACX,eAAe;IACf,mBAAmB;IACnB,OAAO;AACT;AAIO,SAAS;IACd,uCAAmC;;IAInC;IAEA,IAAI;IACJ,IAAI,CAAC,CAAA,GAAA,uLAAA,CAAA,UAAO,AAAD,IAAI,MAAM,EAAE;QACrB,MAAM,CAAA,GAAA,uLAAA,CAAA,gBAAa,AAAD,EAAE;IACtB,OAAO;QACL,MAAM,CAAA,GAAA,uLAAA,CAAA,SAAM,AAAD;IACb;IACA,OAAO,CAAA,GAAA,yOAAA,CAAA,UAAO,AAAD,EAAE;AACjB","debugId":null}},
    {"offset": {"line": 165, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/auth-forms.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useTransition } from 'react';\nimport { verifyAndSignInAction } from '@/lib/actions';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { LogIn } from 'lucide-react';\nimport { GoogleAuthProvider, signInWithPopup } from 'firebase/auth';\nimport { auth as getAuthInstance } from '@/lib/firebase';\nimport { useRouter } from 'next/navigation';\n\nexport function AuthForm() {\n  const [isPending, startTransition] = useTransition();\n  const [error, setError] = useState<string | null>(null);\n  const router = useRouter();\n\n  const handleGoogleSignIn = async () => {\n    const auth = getAuthInstance();\n    if (!auth) {\n      setError(\"Authentication service is not available. Please try again later.\");\n      return;\n    }\n    setError(null);\n    startTransition(async () => {\n      try {\n        const provider = new GoogleAuthProvider();\n        const result = await signInWithPopup(auth, provider);\n        const idToken = await result.user.getIdToken();\n        const actionResult = await verifyAndSignInAction(idToken);\n        if (actionResult.success) {\n          router.push('/');\n        } else {\n          setError(actionResult.message ?? 'Sign in failed after authentication.');\n        }\n      } catch (e: any) {\n        if (e.code === 'auth/popup-closed-by-user') {\n          setError('Sign-in popup closed before completion.');\n        } else {\n          setError(e.message ?? 'An unexpected error occurred during sign-in.');\n        }\n      }\n    });\n  };\n\n  return (\n    <div className=\"flex items-center justify-center min-h-screen bg-background\">\n      <Card className=\"w-full max-w-md bg-gradient-to-br from-card to-card/90 shadow-2xl shadow-primary/20 rounded-xl\">\n        <CardHeader className=\"text-center\">\n          <div className=\"flex justify-center mb-4\">\n            <div className=\"p-4 bg-primary/10 rounded-full\">\n              <LogIn className=\"w-12 h-12 text-primary\" />\n            </div>\n          </div>\n          <CardTitle className=\"text-3xl font-headline text-foreground\">\n            Welcome to OrderlyGather\n          </CardTitle>\n          <CardDescription className=\"text-muted-foreground pt-2\">\n            Sign in with your @iitdh.ac.in Google account to continue.\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-6\">\n            <Button\n              onClick={handleGoogleSignIn}\n              disabled={isPending}\n              className=\"w-full text-lg py-6 bg-primary hover:bg-primary/90 text-primary-foreground font-semibold rounded-lg shadow-md hover:shadow-lg transition-all duration-300 ease-in-out\"\n            >\n              {isPending ? 'Redirecting...' : 'Continue with Google'}\n            </Button>\n            {error && (\n              <p className=\"text-sm text-center text-destructive bg-destructive/10 p-3 rounded-lg\">\n                {error}\n              </p>\n            )}\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;;;AATA;;;;;;;;;AAWO,SAAS;;IACd,MAAM,CAAC,WAAW,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD;IACjD,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAClD,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,qBAAqB;QACzB,MAAM,OAAO,CAAA,GAAA,yHAAA,CAAA,OAAe,AAAD;QAC3B,IAAI,CAAC,MAAM;YACT,SAAS;YACT;QACF;QACA,SAAS;QACT,gBAAgB;YACd,IAAI;gBACF,MAAM,WAAW,IAAI,oPAAA,CAAA,qBAAkB;gBACvC,MAAM,SAAS,MAAM,CAAA,GAAA,iPAAA,CAAA,kBAAe,AAAD,EAAE,MAAM;gBAC3C,MAAM,UAAU,MAAM,OAAO,IAAI,CAAC,UAAU;gBAC5C,MAAM,eAAe,MAAM,CAAA,GAAA,qJAAA,CAAA,wBAAqB,AAAD,EAAE;gBACjD,IAAI,aAAa,OAAO,EAAE;oBACxB,OAAO,IAAI,CAAC;gBACd,OAAO;oBACL,SAAS,aAAa,OAAO,IAAI;gBACnC;YACF,EAAE,OAAO,GAAQ;gBACf,IAAI,EAAE,IAAI,KAAK,6BAA6B;oBAC1C,SAAS;gBACX,OAAO;oBACL,SAAS,EAAE,OAAO,IAAI;gBACxB;YACF;QACF;IACF;IAEA,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC,mIAAA,CAAA,OAAI;YAAC,WAAU;;8BACd,6LAAC,mIAAA,CAAA,aAAU;oBAAC,WAAU;;sCACpB,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC,2MAAA,CAAA,QAAK;oCAAC,WAAU;;;;;;;;;;;;;;;;sCAGrB,6LAAC,mIAAA,CAAA,YAAS;4BAAC,WAAU;sCAAyC;;;;;;sCAG9D,6LAAC,mIAAA,CAAA,kBAAe;4BAAC,WAAU;sCAA6B;;;;;;;;;;;;8BAI1D,6LAAC,mIAAA,CAAA,cAAW;8BACV,cAAA,6LAAC;wBAAI,WAAU;;0CACb,6LAAC,qIAAA,CAAA,SAAM;gCACL,SAAS;gCACT,UAAU;gCACV,WAAU;0CAET,YAAY,mBAAmB;;;;;;4BAEjC,uBACC,6LAAC;gCAAE,WAAU;0CACV;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQjB;GApEgB;;QACuB,6JAAA,CAAA,gBAAa;QAEnC,qIAAA,CAAA,YAAS;;;KAHV","debugId":null}}]
}